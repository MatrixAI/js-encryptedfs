{"version":3,"sources":["webpack://encryptedfs/webpack/universalModuleDefinition","webpack://encryptedfs/webpack/bootstrap","webpack://encryptedfs/./src/util.ts","webpack://encryptedfs/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://encryptedfs/./src/constants.ts","webpack://encryptedfs/./src/index.ts","webpack://encryptedfs/external \"threads\"","webpack://encryptedfs/./src/EncryptedFS.ts","webpack://encryptedfs/(webpack)/buildin/global.js","webpack://encryptedfs/external \"base64-js\"","webpack://encryptedfs/external \"ieee754\"","webpack://encryptedfs/external \"isarray\"","webpack://encryptedfs/./node_modules/path-browserify/index.js","webpack://encryptedfs/./node_modules/process/browser.js","webpack://encryptedfs/external \"util\"","webpack://encryptedfs/external \"auto-bind-proxy\"","webpack://encryptedfs/./src/FileDescriptor.ts","webpack://encryptedfs/./src/EncryptedFSError.ts","webpack://encryptedfs/external \"errno\"","webpack://encryptedfs/./src/Streams.ts","webpack://encryptedfs/external \"readable-stream\"","webpack://encryptedfs/./src/EncryptedFSCrypto.ts","webpack://encryptedfs/./node_modules/crypto-browserify/index.js","webpack://encryptedfs/external \"randombytes\"","webpack://encryptedfs/external \"create-hash\"","webpack://encryptedfs/external \"create-hmac\"","webpack://encryptedfs/external \"browserify-sign/algos\"","webpack://encryptedfs/external \"pbkdf2\"","webpack://encryptedfs/external \"browserify-cipher\"","webpack://encryptedfs/external \"diffie-hellman\"","webpack://encryptedfs/external \"browserify-sign\"","webpack://encryptedfs/external \"create-ecdh\"","webpack://encryptedfs/external \"public-encrypt\"","webpack://encryptedfs/external \"randomfill\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cryptoConstants","freeze","SALT_LEN","INIT_VECTOR_LEN","AUTH_TAG_LEN","KEY_LEN","PBKDF_NUM_ITERATIONS","initializeWorkerPool","numWorkers","Pool","spawn","Worker","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","constants","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","S_IFMT","S_IFREG","S_IFDIR","S_IFCHR","S_IFBLK","S_IFIFO","S_IFLNK","S_IFSOCK","O_CREAT","O_EXCL","O_NOCTTY","O_TRUNC","O_APPEND","O_DIRECTORY","O_NOATIME","O_NOFOLLOW","O_SYNC","O_DIRECT","O_NONBLOCK","S_IRWXU","S_IRUSR","S_IWUSR","S_IXUSR","S_IRWXG","S_IRGRP","S_IWGRP","S_IXGRP","S_IRWXO","S_IROTH","S_IWOTH","S_IXOTH","F_OK","R_OK","W_OK","X_OK","COPYFILE_EXCL","SEEK_SET","SEEK_CUR","SEEK_END","MAP_SHARED","MAP_PRIVATE","DEFAULT_FILE_PERM","default","require","EncryptedFS","upperDir","upperDirContextControl","lowerDir","lowerDirContextControl","umask","blockSize","useWebWorkers","cryptoLib","workerPool","promises","access","accessAsync","lstat","lstatAsync","mkdir","mkdirAsync","mkdtemp","mkdtempAsync","stat","statAsync","rmdir","rmdirAsync","symlink","symlinkAsync","truncate","truncateAsync","unlink","unlinkAsync","utimes","utimesAsync","close","closeAsync","readdir","readdirAsync","exists","existsAsync","fallocate","fallocateAsync","fchmod","fchmodAsync","fchown","fchownAsync","fdatasync","fdatasyncAsync","fstat","fstatAsync","fsync","fsyncAsync","ftruncate","ftruncateAsync","futimes","futimesAsync","link","linkAsync","readFile","readFileAsync","readlink","readlinkAsync","realpath","realpathAsync","rename","renameAsync","readAsync","writeAsync","appendFile","appendFileAsync","chmod","chmodAsync","chown","chownAsync","writeFile","writeFileAsync","open","openAsync","masterKey","crypto","EncryptedFSCrypto","chunkSize","fileDescriptors","Map","metadata","setUmask","uid","setUid","setuid","gid","setGid","setgid","getCwd","path","chdir","promisify","err","callback","then","catch","accessSync","stats","lstatSync","options","recursive","mkdirp","mkdirSync","mkdirpSync","prefix","_path","lowerPath","mkdtempSync","lowerStat","statSync","rmdirSync","symlinkSync","file","truncateSync","existsSync","unlinkSync","atime","mtime","utimesSync","fd","isFileDescriptor","EncryptedFSError","errno","EBADF","closeSync","lowerFd","getLowerFd","delete","contents","readdirSync","getPath","getStreamOptions","flags","autoClose","ReadStream","WriteStream","fdIndex","fallocateSync","fchmodSync","fchownSync","fdatasyncSync","fstatSync","fsyncSync","ftruncateSync","futimesSync","existingPath","newPath","linkSync","optionsInternal","getFileOptions","flag","getMetadata","readBuffer","openSync","isDirectory","EISDIR","readSync","readlinkSync","realpathSync","oldPath","renameSync","position","EINVAL","bytesRead","numChunksToRead","ceil","startChunkNum","offsetToBlockNum","blockBufferStart","getBoundaryOffset","chunkCtr","chunkPosition","chunkNumToOffset","chunkBuffer","blockBuffer","decryptChunk","blockBufferEnd","blockBytesRead","blockBuffers","tempBlockBuffer","decryptChunkSync","upperFd","boundaryOffset","numBlocksToWrite","startBlockNum","endBlockNum","bufferBytesWritten","firstBlockStart","firstBlockEnd","firstBlockOverlay","firstBlock","overlaySegment","firstChunk","encryptBlock","middleBlockLength","lastBlockStart","lastBlockEnd","lastBlock","lastChunk","lastBlockOverlay","lastBlockOffset","blockNumToOffset","middleBlocks","middleChunks","middleBlockBuffer","blockIter","blockGenerator","middleBlockCtr","block","middleBlockOffset","middleBlock","middleChunk","totalBlocks","blocks","totalChunks","chunks","newFileSize","writeMetadataSync","bytesWritten","overlaySegmentSync","encryptBlockSync","writeSync","getUpperFd","appendFileSync","chmodSync","chownSync","written","isFile","lowerFlags","upperFilePath","resolve","upperFilePathDir","dirname","efsFd","loadMetadata","hash","hashSync","keyHash","loadMetadataSync","filename","listener","dest","buffers","cb","defaultOptions","optionsFinal","isCharacterEncoding","highWaterMark","blockBuf","blockNum","blockOffset","newData","writeOffset","originalBlock","readBlock","isBlockStartAligned","startSlice","endSlice","readBlockSync","has","chunkNum","currOffset","fileMeta","newSize","fileSize","serialMeta","JSON","stringify","metadataBockBuffer","metadataChunkBuffer","metadataOffset","getMetadataOffsetSync","metaChunk","metaChunkOffset","metaBlock","metaPlainTrimmed","eval","fieldName","fieldVal","getEfsFd","getFlags","numBlocks","URL","getPathFromURL","url","pathname","decodeURIComponent","g","Function","window","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","f","resolvedPath","resolvedAbsolute","process","cwd","charAt","split","normalize","isAbsolute","trailingSlash","paths","index","relative","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","hasRoot","matchedSlash","basename","extname","startDot","startPart","preDotState","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","_lowerFd","_upperFd","_flags","errnoObj","syscall","message","description","super","errnoDescription","Readable","fileSystem","efs","_open","destroy","_read","destroyed","_close","e_","closed","Promise","Writable","fs","setDefaultEncoding","_write","internalData","map","chunk","deconstructChunk","saltEnd","initVectorEnd","authTagEnd","salt","initVector","authTag","encryptedBuffer","algorithm","randomBytes","pbkdf2Sync","cipher","createCipheriv","encrypted","update","final","getAuthTag","console","log","workerResponse","async","workerCrypto","decipher","createDecipheriv","setAuthTag","outputEncoding","createHash","digest","rng","pseudoRandomBytes","prng","Hash","createHmac","Hmac","algos","algoKeys","keys","hashes","getHashes","pbkdf2","aes","Cipher","createCipher","Cipheriv","Decipher","createDecipher","Decipheriv","getCiphers","listCiphers","dh","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","createDiffieHellman","DiffieHellman","sign","createSign","Sign","createVerify","Verify","createECDH","publicEncrypt","privateEncrypt","publicDecrypt","privateDecrypt","rf","randomFill","randomFillSync","createCredentials"],"mappings":"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","file":"encryptedfs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"encryptedfs\"] = factory();\n\telse\n\t\troot[\"encryptedfs\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { spawn, Pool, Worker, ModuleThread } from 'threads';\nimport { EncryptedFSCryptoWorker } from './EncryptedFSCryptoWorker';\n\nconst cryptoConstants = Object.freeze({\n  SALT_LEN: 64,\n  INIT_VECTOR_LEN: 12,\n  AUTH_TAG_LEN: 16,\n  KEY_LEN: 32,\n  PBKDF_NUM_ITERATIONS: 9816,\n});\n\nfunction initializeWorkerPool(numWorkers: number = 8): Pool<ModuleThread<EncryptedFSCryptoWorker>> {\n  return Pool(() => spawn<EncryptedFSCryptoWorker>(new Worker('./EncryptedFSCryptoWorker.ts')), numWorkers);\n}\n\nexport { cryptoConstants, initializeWorkerPool };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","const constants = Object.freeze({\n  O_RDONLY: 0,\n  O_WRONLY: 1,\n  O_RDWR: 2,\n  O_ACCMODE: 3,\n  S_IFMT: 61440,\n  S_IFREG: 32768,\n  S_IFDIR: 16384,\n  S_IFCHR: 8192,\n  S_IFBLK: 24576,\n  S_IFIFO: 4096,\n  S_IFLNK: 40960,\n  S_IFSOCK: 49152,\n  O_CREAT: 64,\n  O_EXCL: 128,\n  O_NOCTTY: 256,\n  O_TRUNC: 512,\n  O_APPEND: 1024,\n  O_DIRECTORY: 65536,\n  O_NOATIME: 262144,\n  O_NOFOLLOW: 131072,\n  O_SYNC: 1052672,\n  O_DIRECT: 16384,\n  O_NONBLOCK: 2048,\n  S_IRWXU: 448,\n  S_IRUSR: 256,\n  S_IWUSR: 128,\n  S_IXUSR: 64,\n  S_IRWXG: 56,\n  S_IRGRP: 32,\n  S_IWGRP: 16,\n  S_IXGRP: 8,\n  S_IRWXO: 7,\n  S_IROTH: 4,\n  S_IWOTH: 2,\n  S_IXOTH: 1,\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1,\n  COPYFILE_EXCL: 1,\n  SEEK_SET: 0,\n  SEEK_CUR: 1,\n  SEEK_END: 2,\n  MAP_SHARED: 1,\n  MAP_PRIVATE: 2,\n});\n\n/**\n * Default file permissions of `rw-rw-rw-`.\n */\nconst DEFAULT_FILE_PERM =\n  constants.S_IRUSR | constants.S_IWUSR | constants.S_IRGRP | constants.S_IWGRP | constants.S_IROTH | constants.S_IWOTH;\n\nexport { constants, DEFAULT_FILE_PERM };\n","export { initializeWorkerPool } from './util';\nexport { default as EncryptedFS } from './EncryptedFS';\n","module.exports = require(\"threads\");","import fs from 'fs';\nimport Path from 'path';\nimport { promisify } from 'util';\nimport autoBind from 'auto-bind-proxy';\nimport { ModuleThread, Pool } from 'threads';\nimport FileDescriptor from './FileDescriptor';\nimport { constants, DEFAULT_FILE_PERM } from './constants';\nimport { EncryptedFSError, errno } from './EncryptedFSError';\nimport { cryptoConstants } from './util';\nimport { optionsStream, ReadStream, WriteStream } from './Streams';\nimport { EncryptedFSCryptoWorker } from './EncryptedFSCryptoWorker';\nimport { EncryptedFSCrypto, CryptoInterface } from './EncryptedFSCrypto';\n\n/* TODO: we need to maintain seperate permission for the lower directory vs the upper director\n * For example: if you open a file as write-only, how will you merge the block on the ct file?\n * First you need to read, overlay, then write. But we can read, since the file is write-only.\n * So the lower dir file always needs to be read-write, the upper dir file permission will be\n * whatever the user specified.\n *\n * One way to implement this is through inheriting the FileDeescriptors class.\n * Extend the class by adding another attribute for the\n */\n\n\ntype UpperDirectoryMetadata = {\n  size: number;\n  keyHash: Buffer;\n};\n\n/**\n * Encrypted filesystem written in TypeScript for Node.js.\n * @param key A key.\n * @param upperDir The upper directory file system.\n * @param lowerDir The lower directory file system.\n * @param initVectorSize The size of the initial vector, defaults to 16.\n * @param blockSize The size of block, defaults to 4096.\n * @param useWebWorkers Use webworkers to make crypto tasks true async, defaults to false.\n */\nclass EncryptedFS {\n  private uid: number;\n  private gid: number;\n  private umask: number;\n  private upperDir: any;\n  private upperDirContextControl: any;\n  private lowerDir: typeof fs;\n  private lowerDirContextControl: typeof process;\n  private crypto: EncryptedFSCrypto;\n  private chunkSize: number;\n  private blockSize: number;\n  private fileDescriptors: Map<number, FileDescriptor>;\n  private masterKey: Buffer;\n  private metadata: { [fd: number]: UpperDirectoryMetadata };\n  constants: any;\n  constructor(\n    key: Buffer | string,\n    upperDir: typeof fs,\n    upperDirContextControl: typeof fs,\n    lowerDir: typeof fs,\n    lowerDirContextControl: typeof process,\n    umask: number = 0o022,\n    blockSize: number = 4096,\n    useWebWorkers: boolean = false,\n    cryptoLib: CryptoInterface | undefined = undefined,\n    workerPool?: Pool<ModuleThread<EncryptedFSCryptoWorker>>,\n  ) {\n    this.umask = umask;\n    // Set key\n    if (typeof key === 'string') {\n      this.masterKey = Buffer.from(key);\n    } else {\n      this.masterKey = key;\n    }\n    if (cryptoLib) {\n      this.crypto = new EncryptedFSCrypto(this.masterKey, cryptoLib, useWebWorkers, workerPool);\n    } else {\n      this.crypto = new EncryptedFSCrypto(this.masterKey, require('crypto'), useWebWorkers, workerPool);\n    }\n    this.upperDir = autoBind(upperDir);\n    this.upperDirContextControl = autoBind(upperDirContextControl);\n    this.lowerDir = lowerDir;\n    this.lowerDirContextControl = lowerDirContextControl;\n    this.blockSize = blockSize;\n    this.chunkSize =\n      this.blockSize + cryptoConstants.SALT_LEN + cryptoConstants.INIT_VECTOR_LEN + cryptoConstants.AUTH_TAG_LEN;\n    this.fileDescriptors = new Map();\n    this.metadata = {};\n    this.constants = constants;\n  }\n\n  promises = {\n    /**\n     * Asynchronously tests a user's permissions for the file specified by path.\n     * @param fd number. File descriptor.\n     * @returns Promise<void>.\n     */\n    access: this.accessAsync.bind(this),\n    /**\n     * Asynchronously retrieves the path stats in the upper file system directory. Propagates upper fs method.\n     * @param path string. Path to create.\n     * @returns void.\n     */\n    lstat: this.lstatAsync.bind(this),\n    /**\n     * Asynchronously makes the directory in the upper file system directory. Propagates upper fs method.\n     * @param path string. Path to create.\n     * @param mode number | undefined. Permissions or mode.\n     * @returns void.\n     */\n    mkdir: this.mkdirAsync.bind(this),\n    /**\n     * Asynchronously makes a temporary directory with the prefix given.\n     * @param prefix string. Prefix of temporary directory.\n     * @param options { encoding: CharacterEncoding } | CharacterEncoding | null | undefined\n     * @returns void.\n     */\n    mkdtemp: this.mkdtempAsync.bind(this),\n    /**\n     * Asynchronously retrieves  in the upper file system directory. Propagates upper fs method.\n     * @param path string.\n     * @returns void.\n     */\n    stat: this.statAsync.bind(this),\n    /**\n     * Asynchronously removes the directory in the upper file system directory. Propagates upper fs method.\n     * @param path string. Path to create.\n     * @param options: { recursive: boolean }.\n     * @returns void.\n     */\n    rmdir: this.rmdirAsync.bind(this),\n    /**\n     * Asynchronously creates a symbolic link between the given paths in the upper file system directory. Propagates upper fs method.\n     * @param target string. Destination path.\n     * @param path string. Source path.\n     * @returns void.\n     */\n    symlink: this.symlinkAsync.bind(this),\n    /**\n     * Asynchronously changes the size of the file by len bytes.\n     * @param dstPath string. Destination path.\n     * @param srcPath string. Source path.\n     * @returns void.\n     */\n    truncate: this.truncateAsync.bind(this),\n    /**\n     * Asynchronously unlinks the given path in the upper and lower file system directories.\n     * @param path string. Path to create.\n     * @returns void.\n     */\n    unlink: this.unlinkAsync.bind(this),\n    /**\n     * Asynchronously changes the access and modification times of the file referenced by path.\n     * @param path string. Path to file.\n     * @param atime number | string | Date. Access time.\n     * @param mtime number | string | Date. Modification time.\n     * @returns void.\n     */\n    utimes: this.utimesAsync.bind(this),\n    /**\n     * Asynchronously closes the file descriptor.\n     * @param fd number. File descriptor.\n     * @returns Promise<void>.\n     */\n    close: this.closeAsync.bind(this),\n    /**\n     * Asynchronously writes buffer (with length) to the file descriptor at an offset and position.\n     * @param path string. Path to directory to be read.\n     * @param options FileOptions.\n     * @returns string[] (directory contents).\n     */\n    readdir: this.readdirAsync.bind(this),\n    /**\n     * Asynchronously checks if path exists.\n     * @param path string.\n     * @returns boolean.\n     */\n    exists: this.existsAsync.bind(this),\n    /**\n     * Asynchronously manipulates the allocated disk space for a file.\n     * @param fdIndex number. File descriptor index.\n     * @param offset number. Offset to start manipulations from.\n     * @param len number. New length for the file.\n     * @returns void.\n     */\n    fallocate: this.fallocateAsync.bind(this),\n    /**\n     * Asynchronously changes the permissions of the file referred to by fdIndex.\n     * @param fdIndex number. File descriptor index.\n     * @param mode number. New permissions set.\n     * @returns void.\n     */\n    fchmod: this.fchmodAsync.bind(this),\n    /**\n     * Asynchronously changes the owner or group of the file referred to by fdIndex.\n     * @param fdIndex number. File descriptor index.\n     * @param uid number. User identifier.\n     * @param gid number. Group identifier.\n     * @returns void.\n     */\n    fchown: this.fchownAsync.bind(this),\n    /**\n     * Asynchronously flushes in memory data to disk. Not required to update metadata.\n     * @param fdIndex number. File descriptor index.\n     * @returns void.\n     */\n    fdatasync: this.fdatasyncAsync.bind(this),\n    /**\n     * Asynchronously retrieves data about the file described by fdIndex.\n     * @param fd number. File descriptor.\n     * @returns void.\n     */\n    fstat: this.fstatAsync.bind(this),\n    /**\n     * Asynchronously flushes all modified data to disk.\n     * @param fdIndex number. File descriptor index.\n     * @returns void.\n     */\n    fsync: this.fsyncAsync.bind(this),\n    /**\n     * Asynchronously truncates to given length.\n     * @param fdIndex number. File descriptor index\n     * @param len number. Length to truncate to.\n     * @returns void.\n     */\n    ftruncate: this.ftruncateAsync.bind(this),\n    /**\n     * Asynchronously changes the access and modification times of the file referenced by fdIndex.\n     * @param fdIndex number. File descriptor index\n     * @param atime number | string | Date. Access time.\n     * @param mtime number | string | Date. Modification time.\n     * @returns void.\n     */\n    futimes: this.futimesAsync.bind(this),\n    /**\n     * Asynchronously links a path to a new path.\n     * @param existingPath string.\n     * @param newPath string.\n     * @returns void.\n     */\n    link: this.linkAsync.bind(this),\n    /**\n     * Asynchronously reads data from a file given the path of that file.\n     * @param path string. Path to file.\n     * @returns void.\n     */\n    readFile: this.readFileAsync.bind(this),\n    /**\n     * Asynchronously reads link of the given the path. Propagated from upper fs.\n     * @param path string. Path to file.\n     * @param options FileOptions | undefined.\n     * @returns Buffer | string.\n     */\n    readlink: this.readlinkAsync.bind(this),\n    /**\n     * Asynchronously determines the actual location of path. Propagated from upper fs.\n     * @param path string. Path to file.\n     * @param options FileOptions | undefined.\n     * @returns void.\n     */\n    realpath: this.realpathAsync.bind(this),\n    /**\n     * Asynchronously renames the file system object described by oldPath to the given new path. Propagated from upper fs.\n     * @param oldPath string. Old path.\n     * @param oldPath string. New path.\n     * @returns void.\n     */\n    rename: this.renameAsync.bind(this),\n    /**\n     * Asynchronously reads data at an offset, position and length from a file descriptor into a given buffer.\n     * @param fd number. File descriptor.\n     * @param buffer Buffer. Buffer to be written from.\n     * @param offset number. The offset in the buffer at which to start writing.\n     * @param length number. The number of bytes to read.\n     * @param position number. The offset from the beginning of the file from which data should be read.\n     * @returns Promise<number> (bytes read).\n     */\n    read: this.readAsync.bind(this),\n    /**\n     * Asynchronously writes buffer (with length) to the file descriptor at an offset and position.\n     * @param fd number. File descriptor.\n     * @param buffer Buffer. Buffer to be written from.\n     * @param offset number. The part of the buffer to be written. If not supplied, defaults to 0.\n     * @param length number. The number of bytes to write. If not supplied, defaults to buffer.length - offset.\n     * @param position number. The offset from the beginning of the file where this data should be written.\n     * @returns Promise<number>.\n     */\n    write: this.writeAsync.bind(this),\n    /**\n     * Asynchronously append data to a file, creating the file if it does not exist.\n     * @param file string | number. Path to the file or directory.\n     * @param data string | Buffer. The data to be appended.\n     * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined }.\n     * Default options are: { encoding: \"utf8\", mode: 0o666, flag: \"w\" }.\n     * @returns Promise<void>.\n     */\n    appendFile: this.appendFileAsync.bind(this),\n    /**\n     * Asynchronously changes the access permissions of the file system object described by path.\n     * @param path string. Path to the fs object.\n     * @param mode number. New permissions set.\n     * @returns void.\n     */\n    chmod: this.chmodAsync.bind(this),\n    /**\n     * Asynchronously changes the owner or group of the file system object described by path.\n     * @param path string. Path to the fs object.\n     * @param uid number. User identifier.\n     * @param gid number. Group identifier.\n     * @returns void.\n     */\n    chown: this.chownAsync.bind(this),\n    /**\n     * Asynchronously writes data to the path specified with some FileOptions.\n     * @param path string | number. Path to the file or directory.\n     * @param data string | Buffer. The data to be written.\n     * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined } | undefined\n     * @returns void.\n     */\n    writeFile: this.writeFileAsync.bind(this),\n    /**\n     * Asynchronously opens a file or directory and returns the file descriptor.\n     * @param path string. Path to the file or directory.\n     * @param flags string. Flags for read/write operations. Defaults to 'r'.\n     * @param mode number. Read and write permissions. Defaults to 0o666.\n     * @returns Promise<number>\n     */\n    open: this.openAsync.bind(this),\n  }\n\n  getUmask(): number {\n    return this.umask;\n  }\n\n  setUmask(umask: number): void {\n    this.upperDirContextControl.setUmask(umask);\n    this.lowerDirContextControl.umask(umask);\n    this.umask = umask;\n  }\n\n  getUid(): number {\n    return this.uid;\n  }\n\n  setUid(uid: number): void {\n    this.upperDirContextControl.setUid(uid);\n    this.lowerDirContextControl.setuid(uid);\n    this.uid = uid;\n  }\n\n  getGid(): number {\n    return this.gid;\n  }\n\n  setGid(gid: number): void {\n    this.upperDirContextControl.setGid(gid);\n    this.lowerDirContextControl.setgid(gid);\n    this.gid = gid;\n  }\n\n  getCwd(): string {\n    return this.upperDirContextControl.getCwd();\n  }\n\n  // TODO: nodejs fs (i.e. lowerDir) does not have a native method for changing directory and depends on process.chdir(...)\n  // which seems a little too much like a global change. We could also just keep track of the cwd in upperDir (vfs) and then\n  // every time there is an operation using lowerDir, we just prepend this cwd to the path.\n  chdir(path: string): void {\n    this.upperDirContextControl.chdir(path);\n    this.lowerDirContextControl.chdir(path);\n  }\n\n  /**\n   * Asynchronously tests a user's permissions for the file specified by path.\n   * @param fd File descriptor.\n   */\n  private async accessAsync(path: fs.PathLike, mode: number = 0): Promise<void> {\n    try {\n      await promisify(this.lowerDir.access)(path, mode);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Tests a user's permissions for the file specified by path.\n   * @param fd File descriptor.\n   */\n  access(path: fs.PathLike, mode: number = 0, callback?: fs.NoParamCallback): void {\n    this.accessAsync(path, mode).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously tests a user's permissions for the file specified by path.\n   * @param fd File descriptor.\n   */\n  accessSync(path: fs.PathLike, mode: number = this.constants.F_OK): void {\n    this.lowerDir.accessSync(path, mode);\n  }\n\n  /**\n   * Asynchronously retrieves the path stats in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   */\n  private async lstatAsync(path: fs.PathLike): Promise<fs.Stats> {\n    try {\n      return await promisify(this.lowerDir.lstat)(path);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves the path stats in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   */\n  lstat(path: fs.PathLike, callback?: (err: Error | null, stats: fs.Stats | null) => void): void {\n    this.lstatAsync(path).then((stats) => {\n      if (callback) callback(null, stats)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously retrieves the path stats in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   */\n  lstatSync(path: fs.PathLike): fs.Stats {\n    return this.lowerDir.lstatSync(path);\n  }\n\n  /**\n   * Asynchronously makes the directory in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   * @param mode number | undefined. Permissions or mode.\n   */\n  private async mkdirAsync(\n    path: fs.PathLike,\n    options: fs.MakeDirectoryOptions = { mode: 0o777, recursive: false },\n  ): Promise<string> {\n    try {\n      if (options.recursive) {\n        await promisify(this.upperDir.mkdirp)(path, options.mode);\n      } else {\n        await promisify(this.upperDir.mkdir)(path, options.mode);\n      }\n      const _path = await promisify(this.lowerDir.mkdir)(path, options);\n      return _path!;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Makes the directory in the upper file system directory. Propagates upper fs method.\n   */\n  mkdir(\n    path: fs.PathLike,\n    options: fs.MakeDirectoryOptions = { mode: 0o777, recursive: false },\n    callback?: (err: Error | null, path: string | null) => void\n  ): void {\n    this.mkdirAsync(path, options).then((path) => {\n      if (callback) callback(null, path)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously makes the directory in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   * @param mode number | undefined. Permissions or mode.\n   */\n  mkdirSync(path: fs.PathLike, options: fs.MakeDirectoryOptions = { mode: 0o777, recursive: false }): void {\n    this.lowerDir.mkdirSync(path, options);\n    if (options.recursive) {\n      this.upperDir.mkdirpSync(path, options.mode);\n    } else {\n      this.upperDir.mkdirSync(path, options.mode);\n    }\n  }\n\n  /**\n   * Asynchronously makes a temporary directory with the prefix given.\n   * @param prefix Prefix of temporary directory.\n   * @param options { encoding: CharacterEncoding } | CharacterEncoding | null | undefined\n   */\n  private async mkdtempAsync(\n    prefix: string,\n    options: { encoding: BufferEncoding } | BufferEncoding | null | undefined = 'utf8',\n  ): Promise<string> {\n    try {\n      const _path = await promisify(this.upperDir.mkdtemp)(prefix, options);\n      await promisify(this.lowerDir.mkdtemp)(prefix, options);\n      return _path;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Makes a temporary directory with the prefix given.\n   * @param prefix Prefix of temporary directory.\n   * @param options { encoding: CharacterEncoding } | CharacterEncoding | null | undefined\n   */\n  mkdtemp(\n    prefix: string,\n    options: { encoding: BufferEncoding } | BufferEncoding | null | undefined = 'utf8',\n    callback?: (err: Error | null, path: string | null) => void\n  ): void {\n    this.mkdtempAsync(prefix, options).then((path) => {\n      if (callback) callback(null, path)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously makes a temporary directory with the prefix given.\n   * @param prefix Prefix of temporary directory.\n   * @param options { encoding: CharacterEncoding } | CharacterEncoding | null | undefined\n   */\n  mkdtempSync(\n    prefix: string,\n    options: { encoding: BufferEncoding } | BufferEncoding | null | undefined = 'utf8',\n  ): string {\n    const lowerPath = this.lowerDir.mkdtempSync(prefix, options);\n    const lowerStat = this.lowerDir.statSync(lowerPath);\n    this.upperDir.mkdirpSync(lowerPath, lowerStat.mode);\n    return <string>lowerPath;\n  }\n\n  /**\n   * Asynchronously retrieves  in the upper file system directory. Propagates upper fs method.\n   */\n  private async statAsync(path: fs.PathLike): Promise<fs.Stats> {\n    try {\n      return await promisify(this.upperDir.stat)(path);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves  in the upper file system directory. Propagates upper fs method.\n   */\n  stat(path: fs.PathLike, callback?: (err: Error | null, stats: fs.Stats | null) => void): void {\n    this.statAsync(path).then((stats) => {\n      if (callback) callback(null, stats)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Asynchronously retrieves  in the upper file system directory. Propagates upper fs method.\n   */\n  statSync(path: fs.PathLike): fs.Stats {\n    return this.upperDir.statSync(path);\n  }\n\n  /**\n   * Asynchronously removes the directory in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   * @param options: { recursive: boolean }.\n   */\n  private async rmdirAsync(path: fs.PathLike, options: fs.RmDirAsyncOptions | undefined = undefined): Promise<void> {\n    try {\n      if (!(options?.recursive ?? false)) {\n        await promisify(this.upperDir.mkdtemp)(path, options);\n      }\n      await promisify(this.lowerDir.rmdir)(path, options);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Removes the directory in the upper file system directory. Propagates upper fs method.\n   */\n  rmdir(\n    path: fs.PathLike,\n    options: fs.RmDirAsyncOptions | undefined = undefined,\n    callback?: fs.NoParamCallback\n  ): void {\n    this.rmdirAsync(path, options).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously removes the directory in the upper file system directory. Propagates upper fs method.\n   * @param path Path to create.\n   * @param options: { recursive: boolean }.\n   */\n  rmdirSync(path: fs.PathLike, options: fs.RmDirOptions | undefined = undefined): void {\n    // TODO: rmdirSync on VFS doesn't have an option to recusively delete\n    try {\n      if (!options?.recursive) {\n        this.upperDir.rmdirSync(path);\n      }\n      this.lowerDir.rmdirSync(path, options);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Asynchronously creates a symbolic link between the given paths in the upper file system directory. Propagates upper fs method.\n   * @param target Destination path.\n   * @param path Source path.\n   */\n  private async symlinkAsync(\n    target: fs.PathLike,\n    path: fs.PathLike,\n    type: 'dir' | 'file' | 'junction' | null | undefined,\n  ): Promise<void> {\n    try {\n      this.upperDir.symlinkSync(target, path, type);\n      await promisify(this.lowerDir.symlink)(target, path, type);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a symbolic link between the given paths in the upper file system directory. Propagates upper fs method.\n   * @param target Destination path.\n   * @param path Source path.\n   */\n  symlink(\n    target: fs.PathLike,\n    path: fs.PathLike,\n    type: 'dir' | 'file' | 'junction' | null | undefined,\n    callback?: fs.NoParamCallback\n  ): void {\n    this.symlinkAsync(target, path, type).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously creates a symbolic link between the given paths in the upper file system directory. Propagates upper fs method.\n   * @param dstPath Destination path.\n   * @param srcPath Source path.\n   */\n  symlinkSync(\n    target: fs.PathLike,\n    path: fs.PathLike,\n    type: 'dir' | 'file' | 'junction' | null | undefined = 'file',\n  ): void {\n    this.upperDir.symlinkSync(target, path, type);\n    this.lowerDir.symlinkSync(target, path, type);\n  }\n\n  /**\n   * Asynchronously changes the size of the file by len bytes.\n   */\n  private async truncateAsync(file: fs.PathLike | number, len: number = 0): Promise<void> {\n    try {\n      this.upperDir.truncateSync(file, len);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Changes the size of the file by len bytes.\n   */\n  truncate(file: fs.PathLike | number, len: number = 0, callback?: fs.NoParamCallback): void {\n    this.truncateAsync(file, len).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the size of the file by len bytes.\n   */\n  truncateSync(file: fs.PathLike | number, len: number = 0): void {\n    return this.upperDir.truncateSync(file, len);\n  }\n\n  /**\n   * Asynchronously unlinks the given path in the upper and lower file system directories.\n   * @param path Path to create.\n   */\n  private async unlinkAsync(path: fs.PathLike): Promise<void> {\n    try {\n      if (this.upperDir.existsSync(path)) {\n        this.upperDir.unlinkSync(path);\n      }\n      await promisify(this.lowerDir.unlink)(path);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Unlinks the given path in the upper and lower file system directories.\n   * @param path Path to create.\n   */\n  unlink(path: fs.PathLike, callback?: fs.NoParamCallback): void {\n    this.unlinkAsync(path).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously unlinks the given path in the upper and lower file system directories.\n   * @param path Path to create.\n   */\n  unlinkSync(path: fs.PathLike): void {\n    if (this.upperDir.existsSync(path)) {\n      this.upperDir.unlinkSync(path);\n    }\n    this.lowerDir.unlinkSync(path)\n  }\n\n  /**\n   * Asynchronously changes the access and modification times of the file referenced by path.\n   * @param path Path to file.\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  private async utimesAsync(path: fs.PathLike, atime: number | string | Date, mtime: number | string | Date): Promise<void> {\n    try {\n      this.upperDir.utimesSync(path, atime, mtime);\n      await promisify(this.lowerDir.utimes)(path, atime, mtime);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Changes the access and modification times of the file referenced by path.\n   * @param path Path to file.\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  utimes(path: fs.PathLike, atime: number | string | Date, mtime: number | string | Date, callback?: fs.NoParamCallback): void {\n    this.utimesAsync(path, atime, mtime).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the access and modification times of the file referenced by path.\n   * @param path Path to file.\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  utimesSync(path: fs.PathLike, atime: number | string | Date, mtime: number | string | Date): void {\n    this.upperDir.utimesSync(path, atime, mtime);\n    this.lowerDir.utimesSync(path, atime, mtime);\n  }\n\n  /**\n   * Asynchronously closes the file descriptor.\n   * @param fd number. File descriptor.\n   */\n  private async closeAsync(fd: number): Promise<void> {\n    if (this.isFileDescriptor(fd)) {\n      this.upperDir.closeSync(fd);\n      const lowerFd = this.getLowerFd(fd);\n      await promisify(this.lowerDir.close)(lowerFd);\n    } else {\n      throw new EncryptedFSError(errno.EBADF, null, null, 'close');\n    }\n  }\n\n  /**\n   * Closes the file descriptor.\n   * @param fd number. File descriptor.\n   */\n  close(fd: number, callback?: fs.NoParamCallback): void {\n    this.closeAsync(fd).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously closes the file descriptor.\n   * @param fd number. File descriptor.\n   */\n  closeSync(fd: number): void {\n    const isUserFileDescriptor = this.isFileDescriptor(fd);\n    if (isUserFileDescriptor) {\n      const lowerFd = this.getLowerFd(fd);\n      this.lowerDir.closeSync(lowerFd);\n      this.upperDir.closeSync(fd);\n      this.fileDescriptors.delete(fd);\n    }\n  }\n\n  /**\n   * Asynchronously writes buffer (with length) to the file descriptor at an offset and position.\n   * @param path Path to directory to be read.\n   * @param options FileOptions.\n   */\n  private async readdirAsync(\n    path: fs.PathLike,\n    options?: { encoding: BufferEncoding; withFileTypes?: false },\n  ): Promise<string[]> {\n    try {\n      return await promisify(this.lowerDir.readdir)(path, options);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Writes buffer (with length) to the file descriptor at an offset and position.\n   * @param path Path to directory to be read.\n   * @param options FileOptions.\n   */\n  readdir(\n    path: fs.PathLike,\n    options?: { encoding: BufferEncoding; withFileTypes?: false },\n    callback?: (err: Error | null, contents: string[] | null) => void\n  ): void {\n    this.readdirAsync(path, options).then((contents) => {\n      if (callback) callback(null, contents)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously writes buffer (with length) to the file descriptor at an offset and position.\n   * @param path Path to directory to be read.\n   * @param options FileOptions.\n   */\n  readdirSync(\n    path: fs.PathLike,\n    options?: { encoding: BufferEncoding; withFileTypes?: false },\n  ): string[] {\n    return this.lowerDir.readdirSync(path, options);\n  }\n\n  /**\n   * Creates a read stream from the given path and options.\n   * @param path\n   */\n  createReadStream(path: fs.PathLike, options: optionsStream | undefined): ReadStream {\n    path = this.getPath(path);\n    options = this.getStreamOptions(\n      {\n        flags: 'r',\n        encoding: undefined,\n        fd: null,\n        mode: DEFAULT_FILE_PERM,\n        autoClose: true,\n        end: Infinity,\n      },\n      options,\n    );\n    if (options.start !== undefined) {\n      if (options.start > options.end!) {\n        throw new RangeError('ERR_VALUE_OUT_OF_RANGE');\n      }\n    }\n    return new ReadStream(path, options, this);\n  }\n\n  /**\n   * Creates a write stream from the given path and options.\n   * @param path\n   */\n  createWriteStream(path: fs.PathLike, options: optionsStream | undefined): WriteStream {\n    path = this.getPath(path);\n    options = this.getStreamOptions(\n      {\n        flags: 'w',\n        encoding: 'utf8',\n        fd: null,\n        mode: DEFAULT_FILE_PERM,\n        autoClose: true,\n      },\n      options,\n    );\n    if (options.start !== undefined) {\n      if (options.start < 0) {\n        throw new RangeError('ERR_VALUE_OUT_OF_RANGE');\n      }\n    }\n    return new WriteStream(path, options, this);\n  }\n\n  /**\n   * Asynchronously checks if path exists.\n   * @param path\n   */\n  private async existsAsync(path: fs.PathLike): Promise<boolean> {\n    // TODO: make sure upper and lower directories agree\n    try {\n      const existsInLower = await promisify(this.lowerDir.exists)(path);\n      return existsInLower;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Checks if path exists.\n   * @param path\n   */\n  exists(path: fs.PathLike, callback?: (err: Error | null, exists: boolean | null) => void): void {\n    // TODO: make sure upper and lower directories agree\n    this.existsAsync(path).then((exists) => {\n      if (callback) callback(null, exists)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously checks if path exists.\n   * @param path\n   */\n  existsSync(path: fs.PathLike): boolean {\n    // TODO: make sure upper and lower directories agree\n    return this.lowerDir.existsSync(path);\n  }\n\n  /**\n   * Asynchronously manipulates the allocated disk space for a file.\n   * @param fdIndex number. File descriptor index.\n   * @param offset number. Offset to start manipulations from.\n   * @param len number. New length for the file.\n   */\n  private async fallocateAsync(fdIndex: number, offset: number, len: number): Promise<void> {\n    return await promisify(this.upperDir.fallocate)(fdIndex, offset, len);\n  }\n\n  /**\n   * Manipulates the allocated disk space for a file.\n   * @param fdIndex number. File descriptor index.\n   * @param offset number. Offset to start manipulations from.\n   * @param len number. New length for the file.\n   */\n  fallocate(fdIndex: number, offset: number, len: number, callback?: fs.NoParamCallback): void {\n    this.fallocateAsync(fdIndex, offset, len).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously manipulates the allocated disk space for a file.\n   * @param fdIndex number. File descriptor index.\n   * @param offset number. Offset to start manipulations from.\n   * @param len number. New length for the file.\n   */\n  fallocateSync(fdIndex: number, offset: number, len: number): void {\n    return this.upperDir.fallocateSync(fdIndex, offset, len);\n  }\n\n  /**\n   * Asynchronously changes the permissions of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param mode number. New permissions set.\n   */\n  private async fchmodAsync(fdIndex: number, mode: number = 0): Promise<void> {\n    return await promisify(this.upperDir.fchmod)(fdIndex, mode);\n  }\n\n  /**\n   * Changes the permissions of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param mode number. New permissions set.\n   */\n  fchmod(fdIndex: number, mode: number = 0, callback?: fs.NoParamCallback): void {\n    this.fchmodAsync(fdIndex, mode).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the permissions of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param mode number. New permissions set.\n   */\n  fchmodSync(fdIndex: number, mode: number = 0): void {\n    return this.upperDir.fchmodSync(fdIndex, mode);\n  }\n\n  /**\n   * Asynchronously changes the owner or group of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  private async fchownAsync(fdIndex: number, uid: number, gid: number): Promise<void> {\n    return await promisify(this.upperDir.fchown)(fdIndex, uid, gid);\n  }\n\n  /**\n   * Changes the owner or group of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  fchown(fdIndex: number, uid: number, gid: number, callback?: fs.NoParamCallback): void {\n    this.fchownAsync(fdIndex, uid, gid).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the owner or group of the file referred to by fdIndex.\n   * @param fdIndex number. File descriptor index.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  fchownSync(fdIndex: number, uid: number, gid: number): void {\n    return this.upperDir.fchownSync(fdIndex, uid, gid);\n  }\n\n  /**\n   * Asynchronously flushes in memory data to disk. Not required to update metadata.\n   * @param fdIndex number. File descriptor index.\n   */\n  private async fdatasyncAsync(fdIndex: number): Promise<void> {\n    return await promisify(this.upperDir.fdatasync)(fdIndex);\n  }\n\n  /**\n   * Flushes in memory data to disk. Not required to update metadata.\n   * @param fdIndex number. File descriptor index.\n   */\n  fdatasync(fdIndex: number, callback?: fs.NoParamCallback): void {\n    this.fdatasyncAsync(fdIndex).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously flushes in memory data to disk. Not required to update metadata.\n   * @param fdIndex number. File descriptor index.\n   */\n  fdatasyncSync(fdIndex: number): void {\n    return this.upperDir.fdatasyncSync(fdIndex);\n  }\n\n  /**\n   * Asynchronously retrieves data about the file described by fdIndex.\n   * @param fd number. File descriptor.\n   */\n  private async fstatAsync(fd: number): Promise<fs.Stats> {\n    return await promisify(this.upperDir.fstat)(fd);\n  }\n\n  /**\n   * Retrieves data about the file described by fdIndex.\n   * @param fd number. File descriptor.\n   */\n  fstat(fd: number, callback?: (err: Error | null, stats: fs.Stats | null) => void): void {\n    this.fstatAsync(fd).then((stats) => {\n      if (callback) callback(null, stats)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously retrieves data about the file described by fdIndex.\n   * @param fd number. File descriptor.\n   */\n  fstatSync(fd: number): fs.Stats {\n    return this.upperDir.fstatSync(fd);\n  }\n\n  /**\n   * Asynchronously flushes all modified data to disk.\n   * @param fdIndex number. File descriptor index.\n   */\n  private async fsyncAsync(fdIndex: number): Promise<void> {\n    return await promisify(this.upperDir.fsync)(fdIndex);\n  }\n\n  /**\n   * Flushes all modified data to disk.\n   * @param fdIndex number. File descriptor index.\n   */\n  fsync(fdIndex: number, callback?: fs.NoParamCallback): void {\n    this.fsyncAsync(fdIndex).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously flushes all modified data to disk.\n   * @param fdIndex number. File descriptor index.\n   */\n  fsyncSync(fdIndex: number): void {\n    return this.upperDir.fsyncSync(fdIndex);\n  }\n\n  /**\n   * Asynchronously truncates to given length.\n   * @param fdIndex number. File descriptor index\n   * @param len number. Length to truncate to.\n   */\n  private async ftruncateAsync(fdIndex: number, len: number = 0): Promise<void> {\n    return await promisify(this.upperDir.ftruncate)(fdIndex, len);\n  }\n\n  /**\n   * Truncates to given length.\n   * @param fdIndex number. File descriptor index\n   * @param len number. Length to truncate to.\n   */\n  ftruncate(fdIndex: number, len: number = 0, callback?: fs.NoParamCallback): void {\n    this.ftruncateAsync(fdIndex, len).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously truncates to given length.\n   * @param fdIndex number. File descriptor index\n   * @param len number. Length to truncate to.\n   */\n  ftruncateSync(fdIndex: number, len: number = 0): void {\n    return this.upperDir.ftruncateSync(fdIndex, len);\n  }\n\n  /**\n   * Asynchronously changes the access and modification times of the file referenced by fdIndex.\n   * @param fdIndex number. File descriptor index\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  private async futimesAsync(fdIndex: number, atime: number | string | Date, mtime: number | string | Date): Promise<void> {\n    return await promisify(this.upperDir.futimes)(fdIndex, atime, mtime);\n  }\n\n  /**\n   * Changes the access and modification times of the file referenced by fdIndex.\n   * @param fdIndex number. File descriptor index\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  futimes(fdIndex: number, atime: number | string | Date, mtime: number | string | Date, callback?: fs.NoParamCallback): void {\n    this.futimesAsync(fdIndex, atime, mtime).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the access and modification times of the file referenced by fdIndex.\n   * @param fdIndex number. File descriptor index\n   * @param atime number | string | Date. Access time.\n   * @param mtime number | string | Date. Modification time.\n   */\n  futimesSync(fdIndex: number, atime: number | string | Date, mtime: number | string | Date): void {\n    return this.upperDir.futimesSync(fdIndex, atime, mtime);\n  }\n\n  /**\n   * Asynchronously links a path to a new path.\n   * @param existingPath\n   * @param newPath\n   */\n  private async linkAsync(existingPath: fs.PathLike, newPath: fs.PathLike): Promise<void> {\n    await promisify(this.upperDir.link)(existingPath, newPath);\n    await promisify(this.lowerDir.link)(existingPath, newPath);\n  }\n\n  /**\n   * Links a path to a new path.\n   * @param existingPath\n   * @param newPath\n   */\n  link(existingPath: fs.PathLike, newPath: fs.PathLike, callback?: fs.NoParamCallback): void {\n    this.linkAsync(existingPath, newPath).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously links a path to a new path.\n   * @param existingPath\n   * @param newPath\n   */\n  linkSync(existingPath: fs.PathLike, newPath: fs.PathLike): void {\n    this.lowerDir.linkSync(existingPath, newPath);\n    this.upperDir.linkSync(existingPath, newPath);\n  }\n\n  /**\n   * Asynchronously reads data from a file given the path of that file.\n   * @param path Path to file.\n   */\n  private async readFileAsync(path: fs.PathLike | number, options?: fs.WriteFileOptions): Promise<string | Buffer> {\n    const optionsInternal = this.getFileOptions({ encoding: null, mode: 0o666, flag: 'r' }, options);\n    let fd: number | null = null;\n    try {\n      if (typeof path === 'number') {\n        fd = <number>path;\n      } else {\n        fd = await this.openAsync(path, optionsInternal.flag, optionsInternal.mode);\n      }\n      const size = this.getMetadata(fd).size;\n      const readBuffer = Buffer.alloc(size);\n      await this.readAsync(fd, readBuffer);\n      return optionsInternal.encoding ? readBuffer.toString(optionsInternal.encoding) : readBuffer;\n    } catch (err) {\n      throw err;\n    } finally {\n      if (fd) {\n        await this.closeAsync(fd);\n      }\n    }\n  }\n\n  /**\n   * Reads data from a file given the path of that file.\n   * @param path Path to file.\n   */\n  readFile(path: fs.PathLike | number, options: fs.WriteFileOptions, callback?: (err: Error | null, s: string | Buffer | null) => void): void {\n    this.readFileAsync(path, options).then((data) => {\n      if (callback) callback(null, data)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously reads data from a file given the path of that file.\n   * @param path Path to file.\n   */\n  readFileSync(path: fs.PathLike | number, options?: fs.WriteFileOptions): string | Buffer {\n    const optionsInternal = this.getFileOptions({ encoding: null, mode: 0o666, flag: 'r' }, options);\n    let fd: number | null = null;\n    try {\n      if (typeof path === 'number') {\n        fd = <number>path;\n      } else {\n        fd = this.openSync(path, optionsInternal.flag, optionsInternal.mode);\n      }\n      // Check if file descriptor points to directory\n      if (this.fstatSync(fd).isDirectory()) {\n        throw new EncryptedFSError(errno.EISDIR, null, null, 'read');\n      }\n      const size = this.getMetadata(fd).size;\n      const readBuffer = Buffer.alloc(size);\n      this.readSync(fd, readBuffer, 0, size, 0);\n      return optionsInternal.encoding ? readBuffer.toString(optionsInternal.encoding) : readBuffer;\n    } finally {\n      if (fd) {\n        this.closeSync(fd);\n      }\n    }\n  }\n\n  /**\n   * Synchronously reads link of the given the path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  private async readlinkAsync(path: fs.PathLike, options: fs.WriteFileOptions): Promise<Buffer | string> {\n    try {\n      return this.upperDir.readlinkSync(path, options);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Reads link of the given the path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  readlink(path: fs.PathLike, options: fs.WriteFileOptions, callback?: (err: Error | null, data: string | Buffer | null) => void): void {\n    this.readlinkAsync(path, options).then((data) => {\n      if (callback) callback(null, data)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously reads link of the given the path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  readlinkSync(path: fs.PathLike, options: fs.WriteFileOptions): string | Buffer {\n    return this.upperDir.readlinkSync(path, options);\n  }\n\n  /**\n   * Asynchronously determines the actual location of path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  private async realpathAsync(path: fs.PathLike, options: fs.WriteFileOptions): Promise<string> {\n    try {\n      return await promisify(this.upperDir.realpath)(path, options);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Determines the actual location of path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  realpath(path: fs.PathLike, options: fs.WriteFileOptions, callback?: (err: Error | null, path: string | null) => void): void {\n    this.realpathAsync(path, options).then((path) => {\n      if (callback) callback(null, path)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously determines the actual location of path. Propagated from upper fs.\n   * @param path Path to file.\n   * @param options FileOptions | undefined.\n   */\n  realpathSync(path: fs.PathLike, options: fs.WriteFileOptions | undefined = undefined): string | Buffer {\n    return this.upperDir.realpathSync(path, options);\n  }\n\n  /**\n   * Asynchronously renames the file system object described by oldPath to the given new path. Propagated from upper fs.\n   * @param oldPath Old path.\n   * @param newPath New path.\n   */\n  private async renameAsync(oldPath: fs.PathLike, newPath: fs.PathLike): Promise<void> {\n    try {\n      this.upperDir.renameSync(oldPath, newPath);\n      await promisify(this.lowerDir.rename)(oldPath, newPath);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Renames the file system object described by oldPath to the given new path. Propagated from upper fs.\n   * @param oldPath Old path.\n   * @param newPath New path.\n   */\n  rename(oldPath: fs.PathLike, newPath: fs.PathLike, callback?: fs.NoParamCallback): void {\n    this.renameAsync(oldPath, newPath).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously renames the file system object described by oldPath to the given new path. Propagated from upper fs.\n   * @param oldPath Old path.\n   * @param newPath New path.\n   */\n  renameSync(oldPath: fs.PathLike, newPath: fs.PathLike): void {\n    return this.upperDir.renameSync(oldPath, newPath);\n  }\n\n  /**\n   * Asynchronously reads data at an offset, position and length from a file descriptor into a given buffer.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be written from.\n   * @param offset number. The offset in the buffer at which to start writing.\n   * @param length number. The number of bytes to read.\n   * @param position number. The offset from the beginning of the file from which data should be read.\n   */\n  private async readAsync(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length,\n    position: number = 0,\n  ): Promise<number> {\n    if (offset < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'read');\n    }\n    if (length < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'read');\n    }\n    if (position < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'read');\n    }\n    // Check if file descriptor points to directory\n    if (this.fstatSync(fd).isDirectory()) {\n      throw new EncryptedFSError(errno.EISDIR, null, null, 'read');\n    }\n    try {\n      const lowerFd = this.getLowerFd(fd);\n      const metadata = this.getMetadata(fd);\n      if (position + length > metadata.size) {\n        length = metadata.size - position;\n      }\n\n      // Init counters for incremental reading of blocks\n      let bytesRead = 0;\n      let targetStart = offset;\n\n      // Determine chunk boundary conditions\n      const numChunksToRead = Math.ceil(length / this.blockSize);\n      const startBlockNum = this.offsetToBlockNum(position);\n      const startChunkNum = startBlockNum;\n\n      // Initialize write boundary conditions\n      let blockBufferStart = this.getBoundaryOffset(position);\n\n      // Begin reading chunks\n      for (let chunkCtr = startChunkNum; chunkCtr - startChunkNum < numChunksToRead; chunkCtr++) {\n        // Read the current block into chunkBuffer\n        const chunkPosition = this.chunkNumToOffset(chunkCtr);\n        const chunkBuffer = Buffer.alloc(this.chunkSize);\n        await promisify(this.lowerDir.read)(lowerFd, chunkBuffer, 0, this.chunkSize, chunkPosition);\n\n        // Extract blockBuffer from chukBuffer\n        const blockBuffer = await this.crypto.decryptChunk(chunkBuffer);\n\n        // Determine end condition of blockBuffer to write to\n        const blockBufferEnd =\n          length > bytesRead + blockBuffer.length ? blockBuffer.length : length - chunkCtr * this.blockSize;\n\n        // Write blockBuffer to buffer\n        const blockBytesRead = blockBuffer.copy(buffer, targetStart, blockBufferStart, blockBufferEnd);\n\n        // Increment boundary variables\n        bytesRead += blockBytesRead;\n        targetStart += blockBytesRead;\n        blockBufferStart += blockBytesRead;\n      }\n      return bytesRead;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Reads data at an offset, position and length from a file descriptor into a given buffer.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be written from.\n   * @param offset number. The offset in the buffer at which to start writing.\n   * @param length number. The number of bytes to read.\n   * @param position number. The offset from the beginning of the file from which data should be read.\n   */\n  read(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length,\n    position: number = 0,\n    callback?: (err: Error | null, bytesRead: number | null) => void\n  ): void {\n    this.readAsync(fd, buffer, offset, length, position).then((bytesRead) => {\n      if (callback) callback(null, bytesRead)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously reads data at an offset, position and length from a file descriptor into a given buffer.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be read into.\n   * @param offset number. The offset in the buffer at which to start writing.\n   * @param length number. The number of bytes to read.\n   * @param position number. The offset from the beginning of the file from which data should be read.\n   */\n  readSync(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length,\n    position: number = 0,\n  ): number {\n    if (offset < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'readSync');\n    }\n    if (length < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'readSync');\n    }\n    if (position < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'readSync');\n    }\n    // Check if file descriptor points to directory\n    if (this.fstatSync(fd).isDirectory()) {\n      throw new EncryptedFSError(errno.EISDIR, null, null, 'readSync');\n    }\n    try {\n      const lowerFd = this.getLowerFd(fd);\n      const metadata = this.getMetadata(fd);\n      if (position + length > metadata.size) {\n        length = metadata.size - position;\n      }\n\n      // Accumulate plain text blocks in buffer array\n      const blockBuffers: Buffer[] = [];\n\n      // Determine chunk boundary conditions\n      const numChunksToRead = Math.ceil(length / this.blockSize);\n      const startBlockNum = this.offsetToBlockNum(position);\n      const startChunkNum = startBlockNum;\n\n      // Begin reading chunks\n      for (let chunkCtr = startChunkNum; chunkCtr - startChunkNum < numChunksToRead; chunkCtr++) {\n        // Read the current block into chunkBuffer\n        const chunkPosition = this.chunkNumToOffset(chunkCtr);\n        const chunkBuffer = Buffer.alloc(this.chunkSize);\n        this.lowerDir.readSync(lowerFd, chunkBuffer, 0, this.chunkSize, chunkPosition);\n\n        // Extract blockBuffer from chukBuffer\n        const tempBlockBuffer = this.crypto.decryptChunkSync(chunkBuffer);\n        blockBuffers.push(tempBlockBuffer);\n      }\n\n      // Create buffer of all read blockBuffers\n      const blockBuffer = Buffer.concat(blockBuffers, numChunksToRead * this.blockSize);\n\n      // Determine end condition of blockBuffer to write to\n      const blockBufferStart = this.getBoundaryOffset(position);\n      const blockBufferEnd = blockBufferStart + length;\n\n      return blockBuffer.copy(buffer, offset, blockBufferStart, blockBufferEnd);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Asynchronously writes buffer (with length) to the file descriptor at an offset and position.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be written from.\n   * @param offset number. The part of the buffer to be written. If not supplied, defaults to 0.\n   * @param length number. The number of bytes to write. If not supplied, defaults to buffer.length - offset.\n   * @param position number. The offset from the beginning of the file where this data should be written.\n   */\n  private async writeAsync(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length - offset,\n    position: number = 0,\n  ): Promise<number> {\n    if (offset < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'write');\n    }\n    if (length < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'write');\n    }\n    if (position < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'write');\n    }\n    // Check if file descriptor points to directory\n    if (this.fstatSync(fd).isDirectory()) {\n      throw new EncryptedFSError(errno.EISDIR, null, null, 'write');\n    }\n    try {\n      // Discriminate upper and lower file descriptors\n      const upperFd = fd;\n      const lowerFd = this.getLowerFd(fd);\n\n      // Get block boundary conditions\n      const boundaryOffset = this.getBoundaryOffset(position); // how far from a block boundary our write is\n      const numBlocksToWrite = Math.ceil((boundaryOffset + length) / this.blockSize);\n      const startBlockNum = this.offsetToBlockNum(position);\n      const startChunkNum = startBlockNum;\n      const endBlockNum = startBlockNum + numBlocksToWrite - 1;\n\n      let bufferBytesWritten: number = 0;\n\n      // ================== Handle first block ================== //\n      const firstBlockStart = offset;\n      const firstBlockEnd = firstBlockStart + Math.min(this.blockSize - boundaryOffset, length);\n      const firstBlockOverlay = buffer.slice(firstBlockStart, firstBlockEnd);\n      const firstBlock = await this.overlaySegment(upperFd, firstBlockOverlay, position);\n      const firstChunk = await this.crypto.encryptBlock(firstBlock);\n      bufferBytesWritten += firstBlockOverlay.length;\n\n      // ================== Handle last block if needed ================== //\n      const middleBlockLength = (numBlocksToWrite - 2) * this.blockSize;\n      const lastBlockStart = firstBlockEnd + middleBlockLength;\n      const lastBlockEnd = lastBlockStart + (length - (bufferBytesWritten + middleBlockLength));\n      let lastBlock: Buffer | null;\n      let lastChunk: Buffer | null;\n      if (numBlocksToWrite >= 2) {\n        const lastBlockOverlay = buffer.slice(lastBlockStart, lastBlockEnd);\n        const lastBlockOffset = this.blockNumToOffset(endBlockNum);\n        lastBlock = await this.overlaySegment(upperFd, lastBlockOverlay, lastBlockOffset);\n        lastChunk = await this.crypto.encryptBlock(lastBlock);\n        bufferBytesWritten += lastBlockOverlay.length;\n      } else {\n        lastBlock = null;\n        lastChunk = null;\n      }\n\n      // ================== Handle middle blocks if needed ================== //\n      // slice out middle blocks if they actually exist\n      let middleBlocks: Buffer[] = [];\n      let middleChunks: Buffer[] = [];\n      if (numBlocksToWrite >= 3) {\n        const middleBlockBuffer = buffer.slice(firstBlockEnd, lastBlockStart);\n\n        const blockIter = this.blockGenerator(middleBlockBuffer);\n        let middleBlockCtr = startBlockNum + 1;\n        for (let block of blockIter) {\n          const middleBlockOffset = this.blockNumToOffset(middleBlockCtr);\n          const middleBlock = await this.overlaySegment(upperFd, block, middleBlockOffset);\n          const middleChunk = await this.crypto.encryptBlock(middleBlock);\n          middleBlocks.push(middleBlock);\n          middleChunks.push(middleChunk);\n          middleBlockCtr += 1;\n          bufferBytesWritten += block.length;\n        }\n      }\n\n      // ================== Concat blocks and write ================== //\n      let totalBlocks: Buffer[] = [];\n      totalBlocks.push(firstBlock);\n      totalBlocks.push(...middleBlocks);\n      if (lastBlock) {\n        totalBlocks.push(lastBlock);\n      }\n      const blocks = Buffer.concat(totalBlocks, this.blockSize * numBlocksToWrite);\n      // Write to upperDir (unencrypted)\n      await promisify(this.upperDir.write)(upperFd, blocks, 0, blocks.length, this.blockNumToOffset(startBlockNum));\n\n      // ================== Concat chunks and write ================== //\n      let totalChunks: Buffer[] = [];\n      totalChunks.push(firstChunk);\n      totalChunks.push(...middleChunks);\n      if (lastChunk) {\n        totalChunks.push(lastChunk);\n      }\n      const chunks = Buffer.concat(totalChunks, this.chunkSize * numBlocksToWrite);\n      // Write to lowerDir (encrypted)\n      await promisify(this.lowerDir.write)(lowerFd, chunks, 0, chunks.length, this.chunkNumToOffset(startChunkNum));\n\n      // ================== Handle and write metadata ================== //\n      const newFileSize = position + length;\n      if (newFileSize > this.getMetadata(upperFd).size) {\n        this.getMetadata(upperFd).size = newFileSize;\n        this.writeMetadataSync(upperFd);\n      }\n\n      return bufferBytesWritten;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Writes buffer (with length) to the file descriptor at an offset and position.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be written from.\n   * @param offset number. The part of the buffer to be written. If not supplied, defaults to 0.\n   * @param length number. The number of bytes to write. If not supplied, defaults to buffer.length - offset.\n   * @param position number. The offset from the beginning of the file where this data should be written.\n   */\n  write(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length - offset,\n    position: number = 0,\n    callback?: (err: Error | null, bytesWritten: number | null) => void\n  ): void {\n    this.writeAsync(fd, buffer, offset, length, position).then((bytesWritten) => {\n      if (callback) callback(null, bytesWritten)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  /**\n   * Synchronously writes buffer (with length) to the file descriptor at an offset and position.\n   * @param fd number. File descriptor.\n   * @param buffer Buffer. Buffer to be written from.\n   * @param offset number. The part of the buffer to be written. If not supplied, defaults to 0.\n   * @param length number. The number of bytes to write. If not supplied, defaults to buffer.length - offset.\n   * @param position number. The offset from the beginning of the file where this data should be written.\n   */\n  writeSync(\n    fd: number,\n    buffer: Buffer,\n    offset: number = 0,\n    length: number = buffer.length - offset,\n    position: number = 0,\n  ): number {\n    if (offset < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'writeSync');\n    }\n    if (length < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'writeSync');\n    }\n    if (position < 0) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'writeSync');\n    }\n    // Check if file descriptor points to directory\n    if (this.fstatSync(fd).isDirectory()) {\n      throw new EncryptedFSError(errno.EISDIR, null, null, 'writeSync');\n    }\n    try {\n      // Discriminate upper and lower file descriptors\n      const upperFd = fd;\n      const lowerFd = this.getLowerFd(fd);\n\n      // Get block boundary conditions\n      const boundaryOffset = this.getBoundaryOffset(position); // how far from a block boundary our write is\n      const numBlocksToWrite = Math.ceil((boundaryOffset + length) / this.blockSize);\n      const startBlockNum = this.offsetToBlockNum(position);\n      const startChunkNum = startBlockNum;\n      const endBlockNum = startBlockNum + numBlocksToWrite - 1;\n\n      let bufferBytesWritten: number = 0;\n\n      // ================== Handle first block ================== //\n      const firstBlockStart = offset;\n      const firstBlockEnd = firstBlockStart + Math.min(this.blockSize - boundaryOffset, length);\n      const firstBlockOverlay = buffer.slice(firstBlockStart, firstBlockEnd);\n      const firstBlock = this.overlaySegmentSync(upperFd, firstBlockOverlay, position);\n      const firstChunk = this.crypto.encryptBlockSync(firstBlock);\n      bufferBytesWritten += firstBlockOverlay.length;\n\n      // ================== Handle last block if needed ================== //\n      const middleBlockLength = (numBlocksToWrite - 2) * this.blockSize;\n      const lastBlockStart = firstBlockEnd + middleBlockLength;\n      const lastBlockEnd = lastBlockStart + (length - (bufferBytesWritten + middleBlockLength));\n      let lastBlock: Buffer | null;\n      let lastChunk: Buffer | null;\n      if (numBlocksToWrite >= 2) {\n        const lastBlockOverlay = buffer.slice(lastBlockStart, lastBlockEnd);\n        const lastBlockOffset = this.blockNumToOffset(endBlockNum);\n        lastBlock = this.overlaySegmentSync(upperFd, lastBlockOverlay, lastBlockOffset);\n        lastChunk = this.crypto.encryptBlockSync(lastBlock);\n        bufferBytesWritten += lastBlockOverlay.length;\n      } else {\n        lastBlock = null;\n        lastChunk = null;\n      }\n\n      // ================== Handle middle blocks if needed ================== //\n      // slice out middle blocks if they actually exist\n      let middleBlocks: Buffer[] = [];\n      let middleChunks: Buffer[] = [];\n      if (numBlocksToWrite >= 3) {\n        const middleBlockBuffer = buffer.slice(firstBlockEnd, lastBlockStart);\n\n        const blockIter = this.blockGenerator(middleBlockBuffer);\n        let middleBlockCtr = startBlockNum + 1;\n        for (let block of blockIter) {\n          const middleBlockOffset = this.blockNumToOffset(middleBlockCtr);\n          const middleBlock = this.overlaySegmentSync(upperFd, block, middleBlockOffset);\n          const middleChunk = this.crypto.encryptBlockSync(middleBlock);\n          middleBlocks.push(middleBlock);\n          middleChunks.push(middleChunk);\n          middleBlockCtr += 1;\n          bufferBytesWritten += block.length;\n        }\n      }\n\n      // ================== Concat blocks and write ================== //\n      let totalBlocks: Buffer[] = [];\n      totalBlocks.push(firstBlock);\n      totalBlocks.push(...middleBlocks);\n      if (lastBlock) {\n        totalBlocks.push(lastBlock);\n      }\n\n      const blocks = Buffer.concat(totalBlocks, this.blockSize * numBlocksToWrite);\n      // Write to upperDir (unencrypted)\n      this.upperDir.writeSync(upperFd, blocks, 0, blocks.length, this.blockNumToOffset(startBlockNum));\n\n      // ================== Concat chunks and write ================== //\n      let totalChunks: Buffer[] = [];\n      totalChunks.push(firstChunk);\n      totalChunks.push(...middleChunks);\n      if (lastChunk) {\n        totalChunks.push(lastChunk);\n      }\n      const chunks = Buffer.concat(totalChunks, this.chunkSize * numBlocksToWrite);\n      // Write to lowerDir (encrypted)\n      this.lowerDir.writeSync(lowerFd, chunks, 0, chunks.length, this.chunkNumToOffset(startChunkNum));\n\n      // ================== Handle and write metadata ================== //\n      const newFileSize = position + length;\n\n      if (newFileSize > this.getMetadata(fd).size) {\n        this.getMetadata(fd).size = newFileSize;\n        this.writeMetadataSync(fd);\n      }\n\n      return bufferBytesWritten;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Asynchronously append data to a file, creating the file if it does not exist.\n   * @param file string | number. Path to the file or directory.\n   * @param data string | Buffer. The data to be appended.\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined }.\n   * Default options are: { encoding: \"utf8\", mode: 0o666, flag: \"w\" }.\n   */\n  private async appendFileAsync(file: fs.PathLike | number, data: Buffer, options?: fs.WriteFileOptions): Promise<void> {\n    const optionsInternal = this.getFileOptions({ encoding: 'utf8', mode: 0o666, flag: 'a' }, options);\n    let fd: number | null = null;\n    try {\n      // Get file descriptor\n      if (typeof file === 'number') {\n        fd = file;\n      } else {\n        fd = await this.openAsync(file, optionsInternal.flag, optionsInternal.mode);\n      }\n      const upperFd = this.getUpperFd(fd);\n      const lowerFd = this.getLowerFd(fd);\n      await promisify(this.lowerDir.appendFile)(lowerFd, data, optionsInternal);\n    } catch (err) {\n      throw err;\n    } finally {\n      if (fd) {\n        await this.closeAsync(fd);\n      }\n    }\n  }\n\n  /**\n   * Append data to a file, creating the file if it does not exist.\n   * @param file string | number. Path to the file or directory.\n   * @param data string | Buffer. The data to be appended.\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined }.\n   * Default options are: { encoding: \"utf8\", mode: 0o666, flag: \"w\" }.\n   */\n  appendFile(file: fs.PathLike | number, data: Buffer, options: fs.WriteFileOptions, callback?: fs.NoParamCallback): void {\n    this.appendFileAsync(file, data, options).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously append data to a file, creating the file if it does not exist.\n   * @param path string | number. Path to the file or directory.\n   * @param data string | Buffer. The data to be appended.\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined }.\n   * Default options are: { encoding: \"utf8\", mode: 0o666, flag: \"w\" }.\n   */\n  appendFileSync(file: fs.PathLike | number, data: Buffer, options?: fs.WriteFileOptions): void {\n    const optionsInternal = this.getFileOptions({ encoding: 'utf8', mode: 0o666, flag: 'a' }, options);\n    let fd: number | null = null;\n    try {\n      // Get file descriptor\n      if (typeof file === 'number') {\n        fd = file;\n      } else {\n        fd = this.openSync(file, optionsInternal.flag, optionsInternal.mode);\n      }\n      const upperFd = this.getUpperFd(fd);\n      const lowerFd = this.getLowerFd(fd);\n      this.lowerDir.appendFileSync(lowerFd, data, optionsInternal);\n    } catch (err) {\n      throw err;\n    } finally {\n      if (fd) {\n        this.closeSync(fd);\n      }\n    }\n  }\n\n  /**\n   * Asynchronously changes the access permissions of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param mode number. New permissions set.\n   */\n  private async chmodAsync(path: fs.PathLike, mode: number = 0): Promise<void> {\n    try {\n      await promisify(this.upperDir.chmod)(path, mode);\n      await promisify(this.lowerDir.chmod)(path, mode);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Changes the access permissions of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param mode number. New permissions set.\n   */\n  chmod(path: fs.PathLike, mode: number = 0, callback?: fs.NoParamCallback): void {\n    this.chmodAsync(path, mode).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the access permissions of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param mode number. New permissions set.\n   */\n  chmodSync(path: fs.PathLike, mode: number = 0): void {\n    this.upperDir.chmodSync(path, mode);\n    this.lowerDir.chmodSync(path, mode);\n  }\n\n  /**\n   * Asynchronously changes the owner or group of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  private async chownAsync(path: fs.PathLike, uid: number, gid: number): Promise<void> {\n    try {\n      await promisify(this.upperDir.chown)(path, uid, gid);\n      await promisify(this.lowerDir.chown)(path, uid, gid);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Changes the owner or group of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  chown(path: fs.PathLike, uid: number, gid: number, callback?: fs.NoParamCallback): void {\n    this.chownAsync(path, uid, gid).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously changes the owner or group of the file system object described by path.\n   * @param path Path to the fs object.\n   * @param uid number. User identifier.\n   * @param gid number. Group identifier.\n   */\n  chownSync(path: fs.PathLike, uid: number, gid: number): void {\n    this.upperDir.chownSync(path, uid, gid);\n    this.lowerDir.chownSync(path, uid, gid);\n  }\n\n  /**\n   * Asynchronously writes data to the path specified with some FileOptions.\n   * @param path string | number. Path to the file or directory.\n   * @param data string | Buffer. The data to be written.\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined } | undefined\n   */\n  private async writeFileAsync(path: fs.PathLike | number, data: string | Buffer, options: fs.WriteFileOptions): Promise<void> {\n    try {\n      const optionsInternal = this.getFileOptions({ encoding: 'utf8', mode: 0o666, flag: 'w' }, options);\n      const isUserFileDescriptor = this.isFileDescriptor(path);\n      let fd: number;\n      if (isUserFileDescriptor) {\n        fd = <number>path;\n      } else if (typeof path == 'string') {\n        fd = await this.openAsync(path, optionsInternal.flag, optionsInternal.mode);\n      } else {\n        throw new EncryptedFSError(errno.EBADF, null, null, 'writeFile');\n      }\n      let offset = 0;\n      if (typeof data === 'string') {\n        data = Buffer.from(data);\n      }\n      let length = data.byteLength;\n\n      // const position = /a/.test(flag) ? null : 0\n      let position = 0;\n\n      while (length > 0) {\n        const written = await this.writeAsync(fd, data, offset, length, position);\n        offset += written;\n        length -= written;\n        if (position !== null) {\n          position += written;\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Writes data to the path specified with some FileOptions.\n   * @param path string | number. Path to the file or directory.\n   * @param data string | Buffer. The data to be written.\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined } | undefined\n   */\n  writeFile(path: fs.PathLike | number, data: string | Buffer, options: fs.WriteFileOptions, callback?: fs.NoParamCallback): void {\n    this.writeFileAsync(path, data, options).then(() => {\n      if (callback) callback(null)\n    }).catch((err: Error) => {\n      if (callback) callback(err)\n    })\n  }\n\n  /**\n   * Synchronously writes data to the path specified with some FileOptions.\n   * @param path string | number. Path to the file or directory.\n   * @param data string | Buffer. Defines the data to be .\n   * @param options FileOptions: { encoding: CharacterEncodingString mode: number | undefined flag: string | undefined }.\n   * Default options are: { encoding: \"utf8\", mode: 0o666, flag: \"w\" }.\n   */\n  writeFileSync(path: fs.PathLike | number, data: string | Buffer, options: fs.WriteFileOptions = {}): void {\n    try {\n      const optionsInternal = this.getFileOptions({ encoding: 'utf8', mode: 0o666, flag: 'w' }, options);\n      const isUserFileDescriptor = this.isFileDescriptor(path);\n      let fd: number;\n      if (isUserFileDescriptor) {\n        fd = <number>path;\n      } else if (typeof path === 'string') {\n        fd = this.openSync(path, optionsInternal.flag, optionsInternal.mode);\n      } else {\n        throw new EncryptedFSError(errno.EBADF, null, null, 'writeFileSync');\n      }\n      let offset = 0;\n      if (typeof data === 'string') {\n        data = Buffer.from(data);\n      }\n      let length = data.byteLength;\n\n      // let position = /a/.test(flag) ? null : 0\n      let position = 0;\n\n      while (length > 0) {\n        const written = this.writeSync(fd, data, offset, length, position);\n        offset += written;\n        length -= written;\n        if (position !== null) {\n          position += written;\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Asynchronously opens a file or directory and returns the file descriptor.\n   * @param path Path to the file or directory.\n   * @param flags Flags for read/write operations. Defaults to 'r'.\n   * @param mode number. Read and write permissions. Defaults to 0o666.\n   */\n  private async openAsync(path: fs.PathLike, flags: number | string = 'r', mode: number | string = 0o666): Promise<number> {\n    try {\n      const _path = this.getPath(path);\n      // Open on lowerDir\n      let lowerFd = await promisify(this.lowerDir.open)(_path, flags, mode);\n      // Check if a file\n      if ((await promisify(this.lowerDir.fstat)(lowerFd)).isFile()) {\n        // Open with write permissions as well\n        await promisify(this.lowerDir.close)(lowerFd);\n        const lowerFlags = flags[0] === 'w' ? 'w+' : 'r+';\n        lowerFd = await promisify(this.lowerDir.open)(_path, lowerFlags, mode);\n      }\n      const upperFilePath = Path.resolve(_path);\n      // Need to make path if it doesn't exist already\n      if (!this.upperDir.existsSync(upperFilePath)) {\n        const upperFilePathDir = Path.dirname(upperFilePath);\n        // mkdirp\n        await promisify(this.upperDir.mkdirp)(upperFilePathDir);\n        // create file if needed\n        await promisify(this.upperDir.close)(await promisify(this.upperDir.open)(upperFilePath, 'w'));\n      }\n      // Open on upperDir\n      const upperFd = await promisify(this.upperDir.open)(upperFilePath, flags, mode);\n      // Create efsFd\n      const efsFd = new FileDescriptor(lowerFd, upperFd, flags.toString());\n      this.fileDescriptors.set(upperFd, efsFd);\n\n      // If file descriptor points to file, write metadata\n      const isFile = this.fstatSync(upperFd)?.isFile();\n      if (isFile) {\n        if (flags[0] === 'r') {\n          await this.loadMetadata(upperFd);\n        } else if (flags[0] === 'w') {\n          const hash = this.crypto.hashSync(this.masterKey);\n          this.metadata[upperFd] = { keyHash: hash, size: 0 };\n          this.writeMetadataSync(upperFd);\n        }\n      }\n      return upperFd;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Opens a file or directory and returns the file descriptor.\n   * @param path Path to the file or directory.\n   * @param flags Flags for read/write operations. Defaults to 'r'.\n   * @param mode number. Read and write permissions. Defaults to 0o666.\n   */\n  open(path: fs.PathLike, flags: number | string = 'r', mode: number | string = 0o666, callback?: (err: Error | null, fd: number | null) => void): void {\n    this.openAsync(path, flags, mode).then((fd: number) => {\n      if (callback) callback(null, fd)\n    }).catch((err: Error) => {\n      if (callback) callback(err, null)\n    })\n  }\n\n  // TODO: actually implement flags\n  // TODO: w+ should truncate, r+ should not\n  /**\n   * Synchronously opens a file or directory and returns the file descriptor.\n   * @param path Path to the file or directory.\n   * @param flags Flags for read/write operations. Defaults to 'r'.\n   * @param mode number. Read and write permissions. Defaults to 0o666.\n   */\n  openSync(path: fs.PathLike, flags: number | string = 'r', mode: number | string = 0o666): number {\n    try {\n      const _path = this.getPath(path);\n      // Open on lowerDir\n      let lowerFd = this.lowerDir.openSync(_path, flags, mode);\n      // Check if a directory\n      if (this.lowerDir.fstatSync(lowerFd).isFile()) {\n        // Open with write permissions as well\n        this.lowerDir.closeSync(lowerFd);\n        const lowerFlags = flags[0] === 'w' ? 'w+' : 'r+';\n        lowerFd = this.lowerDir.openSync(_path, lowerFlags, mode);\n      }\n      const upperFilePath = Path.resolve(_path);\n      // Need to make path if it doesn't exist already\n      if (!this.upperDir.existsSync(upperFilePath)) {\n        const upperFilePathDir = Path.dirname(upperFilePath);\n        // mkdirp\n        this.upperDir.mkdirpSync(upperFilePathDir);\n        // create file if needed\n        this.upperDir.closeSync(this.upperDir.openSync(upperFilePath, 'w'));\n      }\n      // Open on upperDir\n      const upperFd = this.upperDir.openSync(upperFilePath, flags, mode);\n      // Create efsFd\n      const efsFd = new FileDescriptor(lowerFd, upperFd, flags.toString());\n      this.fileDescriptors.set(upperFd, efsFd);\n\n      // If file descriptor points to file, write metadata\n      const isFile = this.fstatSync(upperFd)?.isFile();\n      if (isFile) {\n        if (flags[0] === 'r') {\n          this.loadMetadataSync(upperFd);\n        } else if (flags[0] === 'w') {\n          const hash = this.crypto.hashSync(this.masterKey);\n          this.metadata[upperFd] = { keyHash: hash, size: 0 };\n          this.writeMetadataSync(upperFd);\n        }\n      }\n      return upperFd;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  lchown(path: fs.PathLike, uid: number, gid: number, callback: fs.NoParamCallback) {\n    throw new Error('Method not implemented')\n  }\n\n  lchownSync(path: fs.PathLike, uid: number, gid: number) {\n    throw new Error('Method not implemented')\n  }\n\n  lchmod(path: fs.PathLike, mode: string | number, callback: fs.NoParamCallback) {\n    throw new Error('Method not implemented')\n  }\n\n  lchmodSync(path: fs.PathLike, mode: string | number) {\n    throw new Error('Method not implemented')\n  }\n\n  watchFile(filename: fs.PathLike, options: any, listener: any) {\n    throw new Error('Method not implemented')\n  }\n\n  unwatchFile(filename: fs.PathLike, listener?: any) {\n    throw new Error('Method not implemented')\n  }\n\n  watch(filename: fs.PathLike, options: any, listener: any) {\n    throw new Error('Method not implemented')\n  }\n\n  copyFile(src: fs.PathLike, dest: fs.PathLike, callback: fs.NoParamCallback) {\n    throw new Error('Method not implemented')\n  }\n\n  copyFileSync(src: fs.PathLike, dest: fs.PathLike) {\n    throw new Error('Method not implemented')\n  }\n\n  writev(fd: number, buffers: NodeJS.ArrayBufferView[], cb: (err: NodeJS.ErrnoException | null, bytesWritten: number, buffers: NodeJS.ArrayBufferView[]) => void) {\n    throw new Error('Method not implemented')\n  }\n\n  writevSync(fd: number, buffers: NodeJS.ArrayBufferView[], position?: number | undefined) {\n    throw new Error('Method not implemented')\n  }\n\n  readv(fd: number, buffers: NodeJS.ArrayBufferView[], cb: (err: NodeJS.ErrnoException | null, bytesRead: number, buffers: NodeJS.ArrayBufferView[]) => void) {\n    throw new Error('Method not implemented')\n  }\n\n  readvSync(fd: number, buffers: NodeJS.ArrayBufferView[], position?: number | undefined) {\n    throw new Error('Method not implemented')\n  }\n\n  opendirSync(path: string, options?: fs.OpenDirOptions | undefined) {\n    throw new Error('Method not implemented')\n  }\n\n  opendir(path: string, cb: (err: NodeJS.ErrnoException | null, dir: fs.Dir) => void) {\n    throw new Error('Method not implemented')\n  }\n\n  Stats: any\n  Dirent: any\n  Dir: any\n  ReadStream: any\n  WriteStream: any\n  BigIntStats: any\n\n  /**\n   * Get key used for encryption.\n   */\n  getKey(): Buffer | string {\n    return this.masterKey;\n  }\n\n  // ============= HELPER FUNCTIONS ============= //\n  private getFileOptions(\n    defaultOptions: Object,\n    options?: fs.WriteFileOptions,\n  ): { encoding?: string | null; mode?: string | number; flag?: string } {\n    let optionsFinal: fs.WriteFileOptions = defaultOptions;\n    if (typeof options === 'string') {\n      if (!this.isCharacterEncoding(options)) {\n        throw Error('Invalid encoding string');\n      }\n      return { ...defaultOptions, encoding: options };\n    }\n    if (options) {\n      if (options.encoding) {\n        if (this.isCharacterEncoding(options.encoding)) {\n          optionsFinal = { ...optionsFinal, encoding: options.encoding };\n        } else {\n          throw Error('Invalid encoding string');\n        }\n      }\n      if (options.flag) {\n        optionsFinal = { ...optionsFinal, flag: options.flag };\n      }\n      if (options.mode) {\n        optionsFinal = { ...optionsFinal, mode: options.mode };\n      }\n    }\n    return optionsFinal;\n  }\n\n  private getStreamOptions(defaultOptions: optionsStream, options?: optionsStream): optionsStream {\n    let optionsFinal: optionsStream = defaultOptions;\n    if (typeof options === 'string') {\n      if (!this.isCharacterEncoding(options)) {\n        throw Error('Invalid encoding string');\n      }\n      return { ...defaultOptions, encoding: options };\n    }\n    if (options) {\n      if (options.highWaterMark) {\n        optionsFinal = { ...optionsFinal, highWaterMark: options.highWaterMark };\n      }\n      if (options.flags) {\n        optionsFinal = { ...optionsFinal, flags: options.flags };\n      }\n      if (options.encoding) {\n        if (this.isCharacterEncoding(options.encoding)) {\n          optionsFinal = { ...optionsFinal, encoding: options.encoding };\n        } else {\n          throw Error('Invalid encoding string');\n        }\n      }\n      if (options.fd) {\n        optionsFinal = { ...optionsFinal, fd: options.fd };\n      }\n      if (options.mode) {\n        optionsFinal = { ...optionsFinal, mode: options.mode };\n      }\n      if (options.autoClose) {\n        optionsFinal = { ...optionsFinal, autoClose: options.autoClose };\n      }\n      if (options.start) {\n        optionsFinal = { ...optionsFinal, start: options.start };\n      }\n      if (options.end) {\n        optionsFinal = { ...optionsFinal, end: options.end };\n      }\n    }\n    return optionsFinal;\n  }\n\n  private isCharacterEncoding(encoding: string | null | undefined): encoding is BufferEncoding {\n    if (encoding == null || encoding == undefined) {\n      return false;\n    }\n\n    return ['ascii', 'utf8', 'utf-8', 'utf16le', 'ucs2', 'ucs-2', 'base64', 'latin1', 'binary', 'hex'].includes(\n      encoding,\n    );\n  }\n\n  /**\n   * Asynchronously reads the whole block that the position lies within.\n   * @param fd File descriptor.\n   * @param position Position of data required.\n   */\n  private async readBlock(fd: number, position: number): Promise<Buffer> {\n    const blockBuf = Buffer.alloc(this.blockSize);\n    // First check if its a new block or empty\n    const metadata = this.getMetadata(fd);\n    if (metadata.size == 0) {\n      return blockBuf.fill(0);\n    }\n    // Read non-empty block\n    const blockNum = this.offsetToBlockNum(position);\n    const blockOffset = this.blockNumToOffset(blockNum);\n    await this.readAsync(fd, blockBuf, 0, this.blockSize, blockOffset);\n\n    return blockBuf;\n  }\n\n  /**\n   * Synchronously reads the whole block that the position lies within.\n   * @param fd File descriptor.\n   * @param position Position of data required.\n   */\n  private readBlockSync(fd: number, position: number): Buffer {\n    const blockBuf = Buffer.alloc(this.blockSize);\n    // First check if its a new block or empty\n    const metadata = this.getMetadata(fd);\n    if (metadata.size == 0) {\n      return blockBuf.fill(0);\n    }\n    // Read non-empty block\n    const blockNum = this.offsetToBlockNum(position);\n    const blockOffset = this.blockNumToOffset(blockNum);\n    this.readSync(fd, blockBuf, 0, this.blockSize, blockOffset);\n\n    return blockBuf;\n  }\n\n  // #TODO:\n  // TODO: what happens if file is less than block size?\n  /**\n   * Asynchronously reads from disk the chunk containing the block that needs to be merged with new block\n   * @param fd File descriptor.\n   * @param newData Buffer containing the new data.\n   * @param position Position of the insertion.\n   */\n  private async overlaySegment(fd: number, newData: Buffer, position: number): Promise<Buffer> {\n    // \tcase 1:  segment is aligned to start of block and ends at end of block      |<------->|\n    // \tcase 2:  segment is aligned to start-of-block but end before end-of-block   |<----->--|\n    // \tcase 3:  segment is not aligned to start and ends before end-of-block       |--<--->--|\n    // \tcase 4:  segment is not aligned to start-of-block and ends at end-of-block  |--<----->|\n    //\n    // \tCases 3 and 4 are not possible when overlaying the last segment\n\n    const writeOffset = this.getBoundaryOffset(position); // byte offset from where to start writing new data in the block\n\n    // Optimization: skip read if newData is block size and position is writeOffset is 0\n    if (writeOffset === 0 && newData.length === this.blockSize) {\n      return newData;\n    }\n\n    // Make sure newData won't be written over block boundary\n    if (writeOffset + newData.length > this.blockSize) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'overlaySegment');\n    }\n\n    // Read relevant block\n    const originalBlock = await this.readBlock(fd, position);\n\n    const isBlockStartAligned = writeOffset === 0;\n    // Get the start slice if newData is not block start aligned\n    let startSlice = Buffer.alloc(0);\n    if (!isBlockStartAligned) {\n      startSlice = originalBlock.slice(0, writeOffset);\n    }\n\n    // Any data reamining after new block\n    const endSlice = originalBlock.slice(writeOffset + newData.length);\n\n    // Patch up slices to create new block\n    const newBlock = Buffer.concat([startSlice, newData, endSlice]);\n\n    return newBlock;\n  }\n\n  /**\n   * Synchronously Reads from disk the chunk containing the block that needs to be merged with new block\n   * @param fd File descriptor.\n   * @param newData Buffer containing the new data.\n   * @param position Position of the insertion.\n   */\n  private overlaySegmentSync(fd: number, newData: Buffer, position: number): Buffer {\n    const writeOffset = this.getBoundaryOffset(position); // byte offset from where to start writing new data in the block\n\n    // Optimization: skip read if newData is block aligned and length is blockSize\n    if (writeOffset === 0 && newData.length === this.blockSize) {\n      return newData;\n    }\n\n    // Make sure newData won't be written over block boundary\n    if (writeOffset + newData.length > this.blockSize) {\n      throw new EncryptedFSError(errno.EINVAL, null, null, 'overlaySegmentSync');\n    }\n\n    // Read relevant block\n    const originalBlock = this.readBlockSync(fd, position);\n\n    const isBlockStartAligned = writeOffset === 0;\n    // Get the start slice if newData is not block start aligned\n    let startSlice = Buffer.alloc(0);\n    if (!isBlockStartAligned) {\n      startSlice = originalBlock.slice(0, writeOffset);\n    }\n\n    // Any data reamining after new block\n    const endSlice = originalBlock.slice(writeOffset + newData.length);\n\n    // Patch up slices to create new block\n    const newBlock = Buffer.concat([startSlice, newData, endSlice]);\n\n    return newBlock;\n  }\n\n  /**\n   * Gets the byte offset from the beginning of the block that position lies within\n   * @param position: number. Position.\n   */\n  private getBoundaryOffset(position: number) {\n    // Position can start from 0 but block size starts counting from 1\n    // Compare apples to apples first and then subtract 1\n    return ((position + 1) % this.blockSize) - 1;\n  }\n\n  /**\n   * Checks if path is a file descriptor (number) or not (string).\n   * @param path Path of file.\n   */\n  private isFileDescriptor(path: fs.PathLike | number): path is number {\n    if (typeof path === 'number') {\n      if (this.fileDescriptors.has(path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Retrieves the upperFd from an efs fd index.\n   * @param fdIndex File descriptor.\n   */\n  private getUpperFd(fdIndex: number): number {\n    if (this.fileDescriptors.has(fdIndex)) {\n      const efsFd = this.fileDescriptors.get(fdIndex);\n      if (efsFd) {\n        const upperFd = efsFd.getUpperFd();\n        if (upperFd !== undefined || upperFd !== null) {\n          return upperFd;\n        } else {\n          throw Error('efs file descriptor is undefined');\n        }\n      } else {\n        throw Error('efs file descriptor is undefined');\n      }\n    } else {\n      throw Error('efs file descriptor does not exist');\n    }\n  }\n\n  /**\n   * Retrieves the lowerFd from an efs fd index.\n   * @param fdIndex File descriptor.\n   */\n  private getLowerFd(fdIndex: number): number {\n    if (this.fileDescriptors.has(fdIndex)) {\n      const efsFd = this.fileDescriptors.get(fdIndex);\n      if (efsFd) {\n        const lowerFd = efsFd.getLowerFd();\n        if (lowerFd !== undefined || lowerFd !== null) {\n          return lowerFd;\n        } else {\n          throw Error('efs file descriptor is undefined');\n        }\n      } else {\n        throw Error('efs file descriptor is undefined');\n      }\n    } else {\n      throw Error('efs file descriptor does not exist');\n    }\n  }\n\n  /**\n   * Takes a position in a file and returns the block number that 'position' lies in.\n   * @param position\n   */\n  private offsetToBlockNum(position: number): number {\n    // we use blockSize as opposed to chunkSize because chunk contains metadata\n    // transparent to user. When user specifies position it is as if it were plaintext\n    return Math.floor(position / this.blockSize);\n  }\n\n  /**\n   * Calculates the offset/position of the block number in the unencrypted file.\n   * @param blockNum Block number.\n   */\n  private blockNumToOffset(blockNum: number): number {\n    return blockNum * this.blockSize;\n  }\n\n  /**\n   * Calculates the offset/position of the chunk number in the unencrypted file.\n   * @param chunkNum Chunk number.\n   */\n  private chunkNumToOffset(chunkNum: number): number {\n    return chunkNum * this.chunkSize;\n  }\n\n  /**\n   * Creates a block generator for block iteration, split is per block length.\n   * @param blocks Buffer containing blocks to be split.\n   * @param blockSize Size of an individual block.\n   */\n  private *blockGenerator(blocks: Buffer, blockSize: number = this.blockSize): IterableIterator<Buffer> {\n    let iterCount = 0;\n    let currOffset = 0;\n    while (currOffset < blocks.length) {\n      yield blocks.slice(currOffset, currOffset + blockSize);\n      currOffset += blockSize;\n      iterCount++;\n    }\n  }\n\n  /**\n   * Creates a chunk generator for chunk iteration, split is per block length.\n   * @param chunks Buffer containing blocks to be split.\n   * @param chunkSize Size of an individual block.\n   */\n  private *chunkGenerator(chunks: Buffer, chunkSize: number = this.chunkSize): IterableIterator<Buffer> {\n    let iterCount = 0;\n    let currOffset = 0;\n    while (currOffset < chunks.length) {\n      yield chunks.slice(currOffset, currOffset + chunkSize);\n      currOffset += chunkSize;\n      iterCount++;\n    }\n  }\n\n  /**\n   * Synchronously checks if file (fd) contains conntent or not.\n   * @param fd File descriptor.\n   */\n  private hasContentSync(fd: number): boolean {\n    const hasContent = this.lowerDir.fstatSync(fd).size !== 0;\n    return hasContent;\n  }\n\n  /**\n   * Synchronously checks for file size.\n   * @param fd File descriptor.\n   */\n  private getPostWriteFileSize(fd: number, position: number, length: number): number {\n    const fileMeta = this.metadata[fd];\n    const newSize = position + length;\n    const fileSize = fileMeta.size;\n    if (newSize > fileSize) {\n      fileMeta.size = newSize;\n      return newSize;\n    } else {\n      return fileSize;\n    }\n  }\n\n  private writeMetadataSync(fd: number): void {\n    const metadata = this.getMetadata(fd);\n    const serialMeta = JSON.stringify(metadata);\n    const metadataBockBuffer = Buffer.concat([Buffer.from(serialMeta)], this.blockSize);\n    const metadataChunkBuffer = this.crypto.encryptBlockSync(metadataBockBuffer);\n    const metadataOffset = this.getMetadataOffsetSync(fd);\n    this.lowerDir.writeSync(this.getLowerFd(fd), metadataChunkBuffer, 0, metadataChunkBuffer.length, metadataOffset);\n  }\n\n  private async loadMetadata(fd: number): Promise<void> {\n    const metaChunk = Buffer.alloc(this.chunkSize);\n    const metaChunkOffset = this.getMetadataOffsetSync(fd);\n\n    await promisify(this.lowerDir.read)(this.getLowerFd(fd), metaChunk, 0, metaChunk.length, metaChunkOffset);\n\n    const metaBlock = await this.crypto.decryptChunk(metaChunk);\n    const metaPlainTrimmed = metaBlock.slice(0, metaBlock.indexOf('\\0'));\n\n    const fileMeta = eval('(' + metaPlainTrimmed.toString() + ')');\n    this.metadata[fd] = fileMeta;\n  }\n\n  private loadMetadataSync(fd: number): void {\n    const metaChunk = Buffer.alloc(this.chunkSize);\n    const metaChunkOffset = this.getMetadataOffsetSync(fd);\n\n    this.lowerDir.readSync(this.getLowerFd(fd), metaChunk, 0, metaChunk.length, metaChunkOffset);\n\n    const metaBlock = this.crypto.decryptChunkSync(metaChunk);\n    const metaPlainTrimmed = metaBlock.slice(0, metaBlock.indexOf('\\0'));\n\n    const fileMeta = eval('(' + metaPlainTrimmed.toString() + ')');\n    this.metadata[fd] = fileMeta;\n  }\n\n  private getMetadata(fd: number): UpperDirectoryMetadata {\n    if (this.metadata.hasOwnProperty(fd)) {\n      const fileMeta = this.metadata[fd];\n      if (fileMeta) {\n        return fileMeta;\n      }\n    }\n    throw Error('file descriptor has no metadata stored');\n  }\n  private getMetaField(fd: number, fieldName: 'size' | 'keyHash'): number | Buffer {\n    const fileMeta: UpperDirectoryMetadata = this.getMetadata(fd);\n    if (fileMeta.hasOwnProperty(fieldName)) {\n      const fieldVal = fileMeta[fieldName];\n      if (fieldVal != null) {\n        return fieldVal;\n      }\n    }\n    throw Error('Field does not exist');\n  }\n  private getMetadataOffsetSync(fd: number): number {\n    const efsFd = this.getEfsFd(fd);\n    const stats = this.lowerDir.fstatSync(this.getLowerFd(fd));\n    const size = stats.size;\n    if (efsFd.getFlags()[0] === 'w') {\n      return size;\n    }\n\n    const numBlocks = size / this.chunkSize;\n    return this.chunkNumToOffset(numBlocks - 1);\n  }\n  private getEfsFd(fd: number): FileDescriptor {\n    if (this.fileDescriptors.has(fd)) {\n      const efsFd = this.fileDescriptors.get(fd);\n      if (efsFd) {\n        return efsFd;\n      }\n    }\n\n    throw Error('file descriptor has no metadata stored');\n  }\n\n  /**\n   * Processes path types and collapses it to a string.\n   * The path types can be string or Buffer or URL.\n   * @private\n   */\n  private getPath(path: fs.PathLike): string {\n    if (typeof path === 'string') {\n      return path;\n    }\n    if (path instanceof Buffer) {\n      return path.toString();\n    }\n    if (path instanceof URL) {\n      return this.getPathFromURL(path);\n    }\n    throw new TypeError('path must be a string or Buffer or URL');\n  }\n\n  /**\n   * Acquires the file path from an URL object.\n   * @private\n   */\n  private getPathFromURL(url: { pathname: string } | URL): string {\n    if (url.hasOwnProperty('hostname')) {\n      throw new TypeError('ERR_INVALID_FILE_URL_HOST');\n    }\n    const pathname = url.pathname;\n    if (pathname.match(/%2[fF]/)) {\n      // must not allow encoded slashes\n      throw new TypeError('ERR_INVALID_FILE_URL_PATH');\n    }\n    return decodeURIComponent(pathname);\n  }\n}\n\nexport default EncryptedFS;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"base64-js\");","module.exports = require(\"ieee754\");","module.exports = require(\"isarray\");","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(\"util\");","module.exports = require(\"auto-bind-proxy\");","class FileDescriptor {\n  private _lowerFd: number;\n  private _upperFd: number;\n  private _flags: string;\n  constructor(lowerFd: number, upperFd: number, flags: string) {\n    this._lowerFd = lowerFd;\n    this._upperFd = upperFd;\n    this._flags = flags;\n  }\n\n  getUpperFd(): number {\n    return this._upperFd;\n  }\n\n  getLowerFd(): number {\n    return this._lowerFd;\n  }\n\n  getFlags(): string {\n    return this._flags;\n  }\n}\n\nexport default FileDescriptor;\n","/**\n * Class representing an encrypted file system error.\n * @extends Error\n */\nclass EncryptedFSError extends Error {\n  errno: number;\n  code: string;\n  errnoDescription: string;\n  syscall?: string;\n\n  /**\n   * Creates EncryptedFSError.\n   */\n  constructor(\n    errnoObj: { errno: number; code: string; description: string },\n    path?: string | null,\n    dest?: string | null,\n    syscall?: string | null,\n  ) {\n    let message = errnoObj.code + ': ' + errnoObj.description;\n    if (path != null) {\n      message += ', ' + path;\n      if (dest != null) message += ' -> ' + dest;\n    }\n    super(message);\n    this.errno = errnoObj.errno;\n    this.code = errnoObj.code;\n    this.errnoDescription = errnoObj.description;\n    if (syscall != null) {\n      this.syscall = syscall;\n    }\n  }\n\n  setPaths(src: string, dst?: string) {\n    let message = this.code + ': ' + this.errnoDescription + ', ' + src;\n    if (dst != null) message += ' -> ' + dst;\n    this.message = message;\n    return;\n  }\n\n  setSyscall(syscall: string) {\n    this.syscall = syscall;\n  }\n}\n\nexport { EncryptedFSError };\nexport { code as errno } from 'errno';\n","module.exports = require(\"errno\");","import EncryptedFS from './EncryptedFS';\nimport { Readable, Writable } from 'readable-stream';\nimport { DEFAULT_FILE_PERM } from './constants';\n\ntype optionsStream = {\n  highWaterMark?: number;\n  flags?: string;\n  encoding?: BufferEncoding;\n  fd?: number | null;\n  mode?: number;\n  autoClose?: boolean;\n  start?: number;\n  end?: number;\n};\n\n/**\n * Class representing a ReadStream.\n * @extends Readable\n */\nclass ReadStream extends Readable {\n  private efs: EncryptedFS;\n  bytesRead: number;\n  path: string;\n  fd: number | null | undefined;\n  flags: string;\n  mode: number | undefined;\n  autoClose: boolean;\n  start: number | undefined;\n  end: number;\n  pos: number;\n  closed: boolean;\n\n  /**\n   * Creates ReadStream.\n   * It will asynchronously open the file descriptor if a file path was passed in.\n   * It will automatically close the opened file descriptor by default.\n   */\n  constructor(path: string, options: optionsStream, fileSystem: EncryptedFS) {\n    super({\n      highWaterMark: options.highWaterMark,\n      encoding: options.encoding,\n    });\n    this.efs = fileSystem;\n    this.bytesRead = 0;\n    this.path = path;\n    this.fd = options.fd === undefined ? null : options.fd;\n    this.flags = options.flags === undefined ? 'r' : options.flags;\n    this.mode = options.mode === undefined ? DEFAULT_FILE_PERM : options.mode;\n    this.autoClose = options.autoClose === undefined ? true : options.autoClose;\n    this.start = options.start;\n    this.end = options.end === undefined ? Infinity : options.end;\n    this.pos = options.start ?? 0;\n    if (typeof this.fd !== 'number') {\n      this._open();\n    }\n    super.on('end', () => {\n      if (this.autoClose) {\n        this.destroy();\n      }\n    });\n  }\n\n  /**\n   * Open file descriptor if ReadStream was constructed from a file path.\n   * @private\n   */\n  _open() {\n    this.efs.promises\n      .open(this.path, this.flags, this.mode)\n      .then((fd) => {\n        this.fd = fd;\n        super.emit('open', fd);\n        super.read();\n      })\n      .catch((err) => {\n        if (this.autoClose) {\n          this.destroy();\n        }\n        super.emit('error', err);\n        return;\n      });\n  }\n\n  /**\n   * Asynchronous read hook for stream implementation.\n   * The size passed into this function is not the requested size, but the high watermark.\n   * It's just a heuristic buffering size to avoid sending to many syscalls.\n   * However since this is an in-memory filesystem, the size itself is irrelevant.\n   * @private\n   */\n  _read(size: number) {\n    if (typeof this.fd !== 'number') {\n      super.once('open', () => {\n        this._read(size);\n      });\n      return;\n    }\n    if (this.destroyed) {\n      return;\n    }\n    // this.pos is only ever used if this.start is specified\n    if (this.pos != null && this.end !== Infinity) {\n      size = Math.min(this.end - this.pos + 1, size);\n    }\n    if (size <= 0) {\n      this.push(null);\n      return;\n    }\n\n    const buffer = Buffer.allocUnsafe(size);\n    this.efs.promises\n      .read(this.fd, buffer, 0, size, this.pos)\n      .then((bytesRead) => {\n        if (bytesRead! > 0) {\n          this.bytesRead += bytesRead!;\n          this.push(buffer!.slice(0, bytesRead));\n        } else {\n          this.push(null);\n        }\n      })\n      .catch((err) => {\n        if (this.autoClose) {\n          this.destroy();\n        }\n        super.emit('error', err);\n      });\n    if (this.pos != null) {\n      this.pos += size;\n    }\n  }\n\n  /**\n   * Destroy hook for stream implementation.\n   * @private\n   */\n  _destroy(e: Error, cb: Function) {\n    this._close((e_) => {\n      cb(e || e_);\n    });\n  }\n\n  /**\n   * Close file descriptor if ReadStream was constructed from a file path.\n   * @private\n   */\n  _close(cb: any) {\n    if (cb) {\n      super.once('close', cb);\n    }\n    if (typeof this.fd !== 'number') {\n      super.once('open', () => {\n        this._close(null);\n      });\n      return;\n    }\n    if (this.closed) {\n      return new Promise(() => super.emit('close'));\n    }\n    this.closed = true;\n    this.efs.promises\n      .close(this.fd)\n      .then(() => {\n        this.emit('close');\n      })\n      .catch((err) => {\n        this.emit('error', err);\n      });\n    this.fd = null;\n  }\n}\n\n/**\n * Class representing a WriteStream.\n * @extends Writable\n */\nclass WriteStream extends Writable {\n  private efs: EncryptedFS;\n  bytesWritten: number;\n  path: string;\n  fd: number | null | undefined;\n  flags: string;\n  mode: number | undefined;\n  autoClose: boolean;\n  start: number | undefined;\n  pos: number | undefined;\n  closed: boolean | undefined;\n\n  /**\n   * Creates WriteStream.\n   */\n  constructor(path: string, options: optionsStream, fs: EncryptedFS) {\n    super({\n      highWaterMark: options.highWaterMark,\n    });\n    this.efs = fs;\n    this.bytesWritten = 0;\n    this.path = path;\n    this.fd = options.fd === undefined ? null : options.fd;\n    this.flags = options.flags === undefined ? 'w' : options.flags;\n    this.mode = options.mode === undefined ? DEFAULT_FILE_PERM : options.mode;\n    this.autoClose = options.autoClose === undefined ? true : options.autoClose;\n    this.start = options.start ?? 0;\n    this.pos = this.start; // WriteStream maintains its own position\n    if (options.encoding) {\n      super.setDefaultEncoding(options.encoding);\n    }\n    if (typeof this.fd !== 'number') {\n      this._open();\n    }\n    super.on('finish', () => {\n      if (this.autoClose) {\n        this.destroy();\n      }\n    });\n  }\n\n  /**\n   * Open file descriptor if WriteStream was constructed from a file path.\n   * @private\n   */\n  _open() {\n    this.efs.promises\n      .open(this.path, this.flags, this.mode)\n      .then((fd) => {\n        this.fd = fd;\n        super.emit('open', fd);\n        // super.read();\n      })\n      .catch((err) => {\n        if (this.autoClose) {\n          this.destroy();\n        }\n        super.emit('error', err);\n        return;\n      });\n  }\n\n  /**\n   * Asynchronous write hook for stream implementation.\n   * @private\n   */\n  // $FlowFixMe: _write hook adapted from Node `lib/internal/fs/streams.js`\n  _write(data: Buffer | string, encoding: string | undefined, cb: Function) {\n    if (typeof this.fd !== 'number') {\n      return super.once('open', () => {\n        this._write(data, encoding, cb);\n      });\n    }\n    let internalData: Buffer;\n    if (typeof data === 'string') {\n      internalData = Buffer.from(data);\n    } else {\n      internalData = data;\n    }\n    this.efs.promises\n      .write(this.fd, internalData, 0, data.length, this.pos)\n      .then((bytesWritten) => {\n        this.bytesWritten += bytesWritten;\n        cb();\n      })\n      .catch((err) => {\n        if (this.autoClose) {\n          this.destroy();\n        }\n        cb(err);\n      });\n    if (this.pos !== undefined) {\n      this.pos += data.length;\n    }\n  }\n\n  /**\n   * Vectorised write hook for stream implementation.\n   * @private\n   */\n  _writev(chunks: Array<{ chunk: Buffer }>, cb: Function) {\n    this._write(Buffer.concat(chunks.map((chunk) => chunk.chunk)), undefined, cb);\n    return;\n  }\n\n  /**\n   * Destroy hook for stream implementation.\n   * @private\n   */\n  _destroy(e: Error, cb: Function) {\n    this._close((e_) => {\n      cb(e || e_);\n    });\n  }\n\n  /**\n   * Close file descriptor if WriteStream was constructed from a file path.\n   * @private\n   */\n  _close(cb: any) {\n    if (cb) {\n      super.once('close', cb);\n    }\n    if (typeof this.fd !== 'number') {\n      super.once('open', () => {\n        this._close(null);\n      });\n      return;\n    }\n    if (this.closed) {\n      return new Promise(() => super.emit('close'));\n    }\n    this.closed = true;\n    this.efs.promises\n      .close(this.fd)\n      .then(() => {\n        this.emit('close');\n      })\n      .catch((err) => {\n        this.emit('error', err);\n      });\n    this.fd = null;\n  }\n\n  /**\n   * Final hook for stream implementation.\n   * @private\n   */\n  _final(cb: Function) {\n    cb();\n    return;\n  }\n}\n\nexport { optionsStream, ReadStream, WriteStream };\n","module.exports = require(\"readable-stream\");","import { ModuleThread, Pool } from 'threads';\nimport { cryptoConstants, initializeWorkerPool } from './util';\nimport { EncryptedFSCryptoWorker } from './EncryptedFSCryptoWorker';\n\ninterface Cipher {\n  update(data: string | Buffer): Buffer;\n  final(): Buffer;\n  setAAD(buffer: Buffer, options: { plaintextLength: number }): this;\n  getAuthTag(): Buffer;\n}\n\ninterface Decipher {\n  update(data: Buffer): Buffer;\n  final(): Buffer;\n  setAuthTag(buffer: Buffer): this;\n  setAAD(buffer: Buffer, options?: { plaintextLength: number }): this;\n}\n\ninterface Hash {\n  update(data: Buffer | string): void;\n  digest(): Buffer;\n}\n\ntype AlgorithmGCM = 'aes-256-gcm';\nexport interface CryptoInterface {\n  createDecipheriv(algorithm: AlgorithmGCM, key: Buffer, iv: Buffer | null): Decipher;\n  createCipheriv(algorithm: AlgorithmGCM, key: Buffer, iv: Buffer | null, options?: any): Cipher;\n  randomBytes(size: number): Buffer;\n  pbkdf2Sync(password: Buffer, salt: Buffer, iterations: number, keylen: number, digest: string): Buffer;\n  pbkdf2(\n    password: Buffer,\n    salt: Buffer,\n    iterations: number,\n    keylen: number,\n    digest: string,\n    callback: (err: Error | null, derivedKey: Buffer) => any,\n  ): void;\n  createHash(algorithm: string): Hash;\n}\n\ntype DeconstructedChunkData = {\n  salt: Buffer;\n  initVector: Buffer;\n  authTag: Buffer;\n  encryptedBuffer: Buffer;\n};\n\nfunction deconstructChunk(chunkBuffer: Buffer): DeconstructedChunkData {\n  const saltEnd = cryptoConstants.SALT_LEN;\n  const initVectorEnd = saltEnd + cryptoConstants.INIT_VECTOR_LEN;\n  const authTagEnd = initVectorEnd + cryptoConstants.AUTH_TAG_LEN;\n\n  const salt = chunkBuffer.slice(0, saltEnd);\n  const initVector = chunkBuffer.slice(saltEnd, initVectorEnd);\n  const authTag = chunkBuffer.slice(initVectorEnd, authTagEnd);\n  const encryptedBuffer = chunkBuffer.slice(authTagEnd);\n\n  return {\n    salt,\n    initVector,\n    authTag,\n    encryptedBuffer,\n  };\n}\n\nclass EncryptedFSCrypto {\n  // Below is a diagram showing the layout of the encrypted chunks\n  // |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n  // ||      ||                       ||                   ||                       ||\n  // || Salt || Initialization Vector || Authorisation Tag || Encrypted Data ... -> ||\n  // ||      ||                       ||                   ||                       ||\n  // |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n  private masterKey: Buffer;\n  private algorithm: AlgorithmGCM = 'aes-256-gcm';\n  // Web workers\n  private useWebWorkers: boolean;\n  private workerPool?: Pool<ModuleThread<EncryptedFSCryptoWorker>>;\n  // Crypto lib\n  private cryptoLib: CryptoInterface;\n  constructor(\n    masterKey: Buffer,\n    cryptoLib: CryptoInterface,\n    useWebWorkers: boolean = false,\n    workerPool?: Pool<ModuleThread<EncryptedFSCryptoWorker>>,\n  ) {\n    // TODO: check the strength of the master key!\n    this.masterKey = masterKey;\n    this.cryptoLib = cryptoLib;\n    // Async via Process or Web workers\n    this.useWebWorkers = useWebWorkers;\n    if (this.useWebWorkers) {\n      if (workerPool) {\n        this.workerPool = workerPool;\n      } else {\n        this.workerPool = initializeWorkerPool();\n      }\n    }\n  }\n\n  /**\n   * Synchronously encrypts the provided block buffer.\n   * According to AES-GCM, the cipher is initialized with a random initVector and derived key.\n   * These are stored at the beginning of the chunk.\n   * @param {Buffer} blockBuffer Block to be encrypted.\n   * @returns {Buffer} Encrypted chunk.\n   */\n  encryptBlockSync(blockBuffer: Buffer): Buffer {\n    // Random initialization vector\n    const initVector = this.cryptoLib.randomBytes(cryptoConstants.INIT_VECTOR_LEN);\n\n    // Random salt\n    const salt = this.cryptoLib.randomBytes(cryptoConstants.SALT_LEN);\n\n    // Create cipher\n    const key = this.cryptoLib.pbkdf2Sync(\n      this.masterKey,\n      salt,\n      cryptoConstants.PBKDF_NUM_ITERATIONS,\n      cryptoConstants.KEY_LEN,\n      'sha512',\n    );\n    const cipher = this.cryptoLib.createCipheriv(this.algorithm, key, initVector);\n\n    // Encrypt block\n    const encrypted = Buffer.concat([cipher.update(blockBuffer), cipher.final()]);\n\n    // Extract the auth tag\n    const authTag = cipher.getAuthTag();\n\n    // Construct chunk\n    return Buffer.concat([salt, initVector, authTag, encrypted]);\n  }\n\n  /**\n   * Asynchronously encrypts the provided block buffer.\n   * According to AES-GCM, the cipher is initialized with a random initVector and derived key.\n   * These are stored at the beginning of the chunk.\n   * @param {Buffer} blockBuffer Block to be encrypted.\n   * @returns {Promise<Buffer>} Promise that resolves to the encrypted chunk.\n   */\n  async encryptBlock(blockBuffer: Buffer): Promise<Buffer> {\n    // Random initialization vector\n    const initVector = this.cryptoLib.randomBytes(cryptoConstants.INIT_VECTOR_LEN);\n\n    // Random salt\n    const salt = this.cryptoLib.randomBytes(cryptoConstants.SALT_LEN);\n\n    if (this.useWebWorkers) {\n      if (!this.workerPool) {\n        console.log('waiting for web worker initialization');\n        while (!this.workerPool) { }\n      }\n      // Construct chunk\n      const workerResponse = await this.workerPool.queue(async (workerCrypto) => {\n        return await workerCrypto.encryptBlock(blockBuffer, this.masterKey, salt, initVector);\n      });\n      return Buffer.from(workerResponse);\n    } else {\n      // Create cipher\n      const key = this.cryptoLib.pbkdf2Sync(\n        this.masterKey,\n        salt,\n        cryptoConstants.PBKDF_NUM_ITERATIONS,\n        cryptoConstants.KEY_LEN,\n        'sha512',\n      );\n      const cipher = this.cryptoLib.createCipheriv(this.algorithm, key, initVector);\n\n      // Encrypt block\n      const encrypted = Buffer.concat([cipher.update(blockBuffer), cipher.final()]);\n\n      // Extract the auth tag\n      const authTag = cipher.getAuthTag();\n\n      // Construct chunk\n      return Buffer.concat([salt, initVector, authTag, encrypted]);\n    }\n  }\n\n  /**\n   * Synchronously decrypts the provided chunk buffer.\n   * According to AES-GCM, the decipher is initialized with the initVector and derived key used to encrypt the block.\n   * These are stored at the beginning of the chunk.\n   * @param {Buffer} chunkBuffer Chunk to be decrypted.\n   * @returns {Buffer} Decrypted block.\n   */\n  decryptChunkSync(chunkBuffer: Buffer): Buffer {\n    // Deconstruct chunk into metadata and encrypted data\n    const { salt, initVector, authTag, encryptedBuffer } = deconstructChunk(chunkBuffer);\n\n    // Create decipher\n    const key = this.cryptoLib.pbkdf2Sync(\n      this.masterKey,\n      salt,\n      cryptoConstants.PBKDF_NUM_ITERATIONS,\n      cryptoConstants.KEY_LEN,\n      'sha512',\n    );\n    const decipher = this.cryptoLib.createDecipheriv(this.algorithm, key, initVector);\n    if (authTag) {\n      decipher.setAuthTag(authTag);\n    }\n\n    // Decrypt into blockBuffer\n    const blockBuffer = Buffer.concat([decipher.update(encryptedBuffer), decipher.final()]);\n\n    return blockBuffer;\n  }\n\n  /**\n   * Asynchronously decrypts the provided chunk buffer.\n   * According to AES-GCM, the decipher is initialized with the initVector and derived key used to encrypt the block.\n   * These are stored at the beginning of the chunk.\n   * @param {Buffer} chunkBuffer Chunk to be decrypted.\n   * @returns {Promise<Buffer>} Promise that resolves to the decrypted block.\n   */\n  async decryptChunk(chunkBuffer: Buffer): Promise<Buffer> {\n    if (this.useWebWorkers) {\n      if (!this.workerPool) {\n        console.log('waiting for web worker initialization');\n        while (!this.workerPool) { }\n      }\n      // Decrypt into blockBuffer\n      const workerResponse = await this.workerPool.queue(async (workerCrypto) => {\n        return await workerCrypto.decryptChunk(chunkBuffer, this.masterKey);\n      });\n      return Buffer.from(workerResponse);\n    } else {\n      // Deconstruct chunk into metadata and encrypted data\n      const { salt, initVector, authTag, encryptedBuffer } = deconstructChunk(chunkBuffer);\n\n      // Create decipher\n      const key = this.cryptoLib.pbkdf2Sync(\n        this.masterKey,\n        salt,\n        cryptoConstants.PBKDF_NUM_ITERATIONS,\n        cryptoConstants.KEY_LEN,\n        'sha512',\n      );\n      const decipher = this.cryptoLib.createDecipheriv(this.algorithm, key, initVector);\n      if (authTag) {\n        decipher.setAuthTag(authTag);\n      }\n\n      // Decrypt into blockBuffer\n      return Buffer.concat([decipher.update(encryptedBuffer), decipher.final()]);\n    }\n  }\n\n  // ========= Convenience functions ============= //\n  hashSync(data: string | Buffer, outputEncoding: 'hex' | 'latin1' | 'base64' = 'hex'): Buffer {\n    const hash = this.cryptoLib.createHash('sha256');\n    hash.update(data);\n    return hash.digest();\n  }\n}\n\nexport { EncryptedFSCrypto, deconstructChunk };\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","module.exports = require(\"randombytes\");","module.exports = require(\"create-hash\");","module.exports = require(\"create-hmac\");","module.exports = require(\"browserify-sign/algos\");","module.exports = require(\"pbkdf2\");","module.exports = require(\"browserify-cipher\");","module.exports = require(\"diffie-hellman\");","module.exports = require(\"browserify-sign\");","module.exports = require(\"create-ecdh\");","module.exports = require(\"public-encrypt\");","module.exports = require(\"randomfill\");"],"sourceRoot":""}